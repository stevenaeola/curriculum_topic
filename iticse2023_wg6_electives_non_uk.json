["<h2>Uppsala_Sweden 1DL301</h2><h2>title</h2>Database Design I<h2>content</h2> <li>an introduction to the database area and database terminology,</li> <li>entitets-relations (ER) modelling and expanded entitets-relations (EER) modelling,</li> <li>an overview of the relational data model and relational algebra and transformation of the data representation from the ER data model to the relational data model,</li> <li>an introduction to physical database design with functional dependencies and normalisation,</li> <li>an introduction to queries, updates and data definition with help of the query language SQL,</li> <li>an introduction to transactions, basic techniques for transaction management and concurrency control and recovery,</li> <li>an introduction to physical database design with file organisation, single level index and tree index,</li> <li>an introduction to procedural SQL and the application interface, and</li> <li>an orientation in advanced database applications and techniques.</li><h2>ilo</h2> <li>create conceptual models of relational databases based on requirement specification documents;</li> <li>translate a conceptual model to the relational model;</li> <li>create, modify and query relational databases using the SQL language;</li> <li>apply normalization techniques to reduce data redundancy and improve data integrity;</li> <li>create computer programs which store, modify and query data stored in databases;</li> <li>set up indexes and use other techniques to improve the performance of databases;</li> <li>set up users and their privileges;</li> <li>explain principles of security in database systems and apply protection mechanisms.</li> <li>present and discuss the course content orally and in writing with proficiency appropriate to the course level.</li>", "<h2>Uppsala_Sweden 1DL311</h2><h2>title</h2>Semantics of Programming Languages<h2>content</h2><h2>ilo</h2> <li>explain and apply formal semantic descriptions of programming languages and other formal languages, particularly in operational semantics.</li> <li>construct simple semantic descriptions in operational semantics, and</li> <li>apply methods to prove basic properties of semantic descriptions.</li>", "<h2>Uppsala_Sweden 1DT052</h2><h2>title</h2>Computer Networks I<h2>content</h2><h2>ilo</h2> <li>Explain in a concise manner how the Internet is constructed and functions.</li> <li>Reason about design choices at different layers in the TCP/IP protocol stack.</li> <li>Use standard tools to debug a network path.</li> <li>Theorize about establishing and maintaining communication at different levels of abstraction.</li> <li>Identify and discuss usual security issues regarding computer network protocols and applications.</li>", "<h2>Uppsala_Sweden 1TD403</h2><h2>title</h2>Numerical Methods and Simulation<h2>content</h2><h2>ilo</h2>", "<h2>Uppsala_Sweden 1DL231</h2><h2>title</h2>Algorithms and Data Structures II<h2>content</h2><h2>ilo</h2> <li>use the notation of asymptotic growth of functions and be able to use this notation to describe the complexity of algorithms and computational problems</li> <li>derive equations for the complexity of algorithms and solve such equations</li> <li>work with common algorithmic techniques such as dynamic programming, greedy algorithms, etc.</li> <li>deal with basic problems using graph algorithms, string matching and flow networks.</li> <li>define the complexity classes P and NP, and discuss the open question whether P=NP.</li> <li>present and discuss topics related to the course content orally and in writing with a skill appropriate for the level of education.</li>", "<h2>Uppsala_Sweden 1DL321</h2><h2>title</h2>Compiler Design I<h2>content</h2><h2>ilo</h2> <li>structure a compiler as a sequence of distinct translation steps</li> <li>use regular languages to describe the lexical elements of a programming language</li> <li>describe lexical analysis using a finite automaton</li> <li>use context free languages to describe the syntactic structure of a programming language</li> <li>use the parsing methods top-down (recursive descent) and bottom-up (LR)</li> <li>use abstract syntax trees to represent the results of the syntactic analysis</li> <li>break down statements and expressions to simpler designs, and translate syntax trees to intermediate code</li> <li>describe how recursive procedure calls can be implemented by means of stacks, activation posts and machine registers</li> <li>translate the simplified intermediate code of a program to machine-specific instructions</li>", "<h2>Uppsala_Sweden 1DT072</h2><h2>title</h2>Secure Computer Systems I<h2>content</h2><h2>ilo</h2> <li>explain basic concepts, theories and principles for security in computer systems, such as identification, authenticity and access control</li> <li>explain principles for attacks and protective measures in different aspects of computer systems, such as operating systems, software, networks and web based systems</li> <li>identify weaknesses and strengths concerning the security in computer systems</li> <li>discuss ethical aspects of computer systems security and its application</li> <li>present and discuss the course content orally and in writing with proficiency appropriate to the course level</li>", "<h2>Uppsala_Sweden 1DL481</h2><h2>title</h2>Algorithms and Data Structures III<h2>content</h2><h2>ilo</h2> <li>analyse NP-completeness of an algorithmic problem;</li> <li>use advanced algorithm analysis methods, such as amortised analysis and probabilistic analysis;</li> <li>use advanced algorithm design methods in order to approach hard algorithmic problems in a pragmatic way, such as by using randomised algorithms (such as universal hashing), approximation algorithms, stochastic local search (such as simulated annealing and tabu search), integer programming, propositional satisfiability (SAT), and SAT modulo theories (SMT).</li> <li>present and discuss topics related to the course content orally and in writing with a skill appropriate for the level of education.</li>", "<h2>Uppsala_Sweden 1MD001</h2><h2>title</h2>Advanced Interaction Design<h2>content</h2><h2>ilo</h2>", "<h2>Uppsala_Sweden 1TD169</h2><h2>title</h2>Data Engineering I<h2>content</h2><h2>ilo</h2> <li>use public and private cloud infrastructure;</li> <li>discuss key concepts in cloud computing such as Infrastructure as a Service (IaaS), Platform as a service (PaaS) och Software as a Service (SaaS);</li> <li>apply cloud security best practices in solutions;</li> <li>use modern systems for handling massive datasets;</li> <li>analyse properties of data-intensive applications and based on this suggest suitable strategies and architectures to meet application needs;</li> <li>implement software based on analysis as in the previous point and using technology presented in the course;</li> <li>critically analyse, discuss and present solutions and implementations in writing and orally.</li>", "<h2>Uppsala_Sweden 1TD388</h2><h2>title</h2>Computer Graphics<h2>content</h2><h2>ilo</h2> <li>describe the data flow in a graphics rendering system;</li> <p></p><p class=\"linebreak\"> </p><li>use matrix algebra in computer graphics applications;</li> <p></p><p class=\"linebreak\"> </p><li>implement fundamental algorithms and transformations involved in viewing models, projection models, illumination models and the handling of hidden surfaces in polygon-based computer graphics;</li> <p></p><p class=\"linebreak\"> </p><li>describe effects such as texture mapping, bump mapping and antialiasing;</li> <p></p><p class=\"linebreak\"> </p><li>describe curves and surfaces that can be represented by splines;</li> <p></p><p class=\"linebreak\"> </p><li>use the OpenGL API with C++ in 3D graphics programming;</li> <p></p><p class=\"linebreak\"> </p><li>program GPU hardware, so called shader programming;</li>", "<h2>Uppsala_Sweden 1TD062</h2><h2>title</h2>High Performance Programming<h2>content</h2><h2>ilo</h2> <li>implement computational algorithms to efficient C-code for modern computer architectures;</li> <li>use tools for performance optimisation and debugging;</li> <li>propose and implement efficient performance optimisations;</li> <li>identify factors that restrict parallelism in an algorithm or a program;</li> <li>present written performance analysis in a clear and explicit way.</li>", "<h2>Uppsala_Sweden 1DL034</h2><h2>title</h2>Introduction to Machine Learning<h2>content</h2><h2>ilo</h2> <li>explain and compare basic machine learning methods;</li> <li>use machine learning software in practical applications;</li> <li>evaluate the applicability of the studied methods.</li>", "<h2>Uppsala_Sweden 1MD004</h2><h2>title</h2>IT, Ethics and Organisation<h2>content</h2><h2>ilo</h2> <li>report for which ethical theories and organisation theories that are relevant to use at analysis at design and using IT-system;</li> <li>handle and solve ethical problems in connection with design and using IT-systems;</li> <li>using questionnaires, surveys, interviews and the like in connection with software development and IT-use.</li>", "<h2>Uppsala_Sweden 1DT075</h2><h2>title</h2>Cryptology<h2>content</h2><h2>ilo</h2> <li>give examples of how theories, principles, and techniques based on cryptology can be used to achieve data security.</li> <li>explain the theories underpinning common cryptographic methods, such as different types of hash-functions, symmetric and asymmetric ciphers, digital signatures and random numbers.</li> <li>analyse, use and implement such methods and reflect on their limits and applicability.</li>", "<h2>Uppsala_Sweden 1DL550</h2><h2>title</h2>Low-Level Parallel Programming<h2>content</h2><h2>ilo</h2> <li>explain key issues of parallel programming, including data distribution, load balancing, locking and synchronisation</li> <li>construct parallel algorithms, i.e., identify parallelism in a given algorithm, implement this parallelism, and identify factors that limit the parallelism in a program or algorithm</li> <li>compare several parallel programming frameworks in terms of performance and efficiency of development</li> <li>use several high-performance parallel programming frameworks and choose an appropriate framework under given circumstances such as computer architecture, application and efficiency</li>", "<h2>Uppsala_Sweden 1DL251</h2><h2>title</h2>Software Engineering and Project Management<h2>content</h2><h2>ilo</h2> <li>describe the principal tasks of software project managers, and basic concepts in software projects</li> <li>plan software projects, including risk and quality management</li> <li>explain basic concepts and principles of components of software engineering, e.g., of requirements engineering, system design, software implementation, testing and maintenance, and how these components contribute to the software process</li> <li>evaluate and relate different software processes, system models and architetural designs and assess their suitability in a given context</li> <li>explain, using theory of group dynamics, how the project manager can act to influence success of the project</li> <li>present and discuss course contents, orally and in writing.</li>", "<h2>Uppsala_Sweden 1MD300</h2><h2>title</h2>Social Robotics and Human-Robot Interaction<h2>content</h2><h2>ilo</h2> <li>understand principles and theories of human-robot interaction</li> <li>carry out user requirement analysis and design of human-robot interaction in concrete scenarios</li> <li>design and develop social skills for human-robot interaction using a physical robotic platform</li> <li>use quantitative and qualitative approaches for evaluation and analysis of human-robot interaction data</li> <li>evaluate the impact that social robots may have on ethical values like privacy and autonomy that are important for users and society at large</li>", "<h2>CAU_Germany Inf-NumProg</h2><h2>title</h2>Numerical Programming\n<h2>summary</h2>Using simple examples of algorithms, the essential problems, basic knowledge, concepts and techniques of numerical programming are taught and practiced in programming tasks.<h2>content</h2>Examples of simple numerical simulations\nFloating point arithmetic and numeric calculations\nAlgorithm stability\nCondition of numerical problems\nPerformance and optimization (e.g. cache, pipelining, latency, throughput)\nObject Orientation and Numerical Algorithms\nInteractive visualization\nTypical algorithms of numerical problems\nBasic principles of iterative numerical algorithms\nBasic principles of programming efficient and parallelizable algorithms\n<h2>ilo</h2>Skills in the implementation of simple numerical algorithms (especially with regard to efficiency), skills in the visualization of numerical results, knowledge of the special requirements of numerical programming and the related application of computer science methods.", "<h2>CAU_Germany Inf-NNDL</h2><h2>title</h2>Neural networks and deep learning<h2>summary</h2>Neural Networks and Deep Learning recently have gained strong interest (Deep Learning has been considered one of 10 breakthrough technologies by the MIT Technology Review 2013). The aim of the course is to provide a fundamental understanding of important concepts, algorithms, techniques and architectures of neural networks and deep learning.<h2>content</h2>Biological basis (neuron and networks)\nArtificial neuron models\nArtificial neural networks: Architectures and the learning problem\nFeedforward neural networks, multi-layer perceptron\nLearning in neural networks and the backpropagation algorithm\nDeep Learning: Motivation and concepts\nConvolutional neural networks\n(If time permits:) Recurrent neural networks: Long Short Term Memory (LSTM)\n(If time permits:) Unsupervised learning: Autoencoders\n(If time permits:) Generative models: Variational Autoencoder, Generative Adversarial Networks<h2>ilo</h2>After completing the course, students should\n\nhave a basic overview over neural network and deep learning concepts, algorithms and architectures, suitable applications, capabilities and limitations,\nbe able to apply suitable neural network and deep learning techniques to new problems,\nanalyze the outcome of neural network and deep learning experiments and explore potential methods to improve performance.", "<h2>CAU_Germany inf-EnlOpt</h2><h2>title</h2>Introduction to Nonlinear Optimization<h2>summary</h2>Theory and algorithms for solving general, non-linear optimization problems with and without constraints from various fields of application.<h2>content</h2>Classification of optimization problems\nOptimality criteria for unconstrained problems\nAlgorithms for unconstrained problems, gradient-based and derivative-free methods\nAlgorithmic Differentiation\nOptimality criteria for problems with constraints\nAlgorithms for constraint problems<h2>ilo</h2>Modeling and formalization of optimization tasks given in text form\nClassify optimization problems\nApply optimality criteria\nImplement and apply algorithms to solve optimization tasks\nEvaluate and evaluate the results of optimization algorithms", "<h2>CAU_Germany inf-EAeS</h2><h2>title</h2>Methods for Efficient Similarity Search in Large Data Sets<h2>summary</h2>The lecture presents new techniques for similarity search, especially feature-based similarity search in databases with complexly structured objects. The treated substance is used in many (non-computer science) sciences in which data-driven exploration is becoming an increasingly important topic, such as archaeology, medicine, and other natural sciences and humanities. This data includes, in particular, multimedia objects and general Multi-attribute objects objects with spatial expansion (e.g. CAD data, geo-objects, bio-molecules, etc.) Time series and sequence data (e.g. audio sequences, video sequences, etc.)<h2>content</h2>Introduction to feature-based similarity search\nFeature rooms and distance measurements\nAlgorithmic paradigms for request processing\nIndex structures for feature rooms and metric spaces\nArea inquiries\nNext-neighbours inquiries\nReverse Next Neighbors Request\nSkyline requests and Pareto optimality\nEvaluation of methods for finding similarity\nFeature extraction of spatially extended objects\nFeature extraction of time series\nNeighborhood search in network graphs<h2>ilo</h2>The students know algorithmic techniques for the efficiency and effectiveness of the presented techniques for neighborhood search and neighborhood inquiry in non-standard databases (data sets) and can apply them practically. In addition, they have understood index-based search and multi-stage request processing as well as feature extraction methods for spatial and temporal data.", "<h2>CAU_Germany Inf-GraphDraw </h2><h2>title</h2>Automatic Graph Drawing<h2>summary</h2>Graphs are found in numerous areas of computer science and beyond. For example, software engineers make regular use of class diagrams, automata or flow charts. Hardware design makes use of net lists and circuit diagrams. The drawing of a graph is its visual representation. The manual creation of a well-readable drawing, such as the design of a UML diagram with a software engineering tool, can be a very time consuming activity.\n\nThis class covers approaches for the efficient, automatic creation of well-readable diagrams. This is an application-driven form of algorithm engineering, where cognitive psychology plays an important role. Graph drawing methods are used increasingly for example in \"auto-layout\" features of development tools.\n\nThe tool stretches from theoretical foundations to practical implementations. We here make use of the Eclipse-based open source tool KIELER (Kiel Integrated Environment for Layout) and the Eclipse Layout Kernel (ELK). Both of these projects are developed at the RTSYS research group, ELK is now an official Eclipse project.<h2>content</h2>Foundations of graph theory\nAesthetics criteria\nTooling, usage of ELK and KIELER\nDrawing trees\nForce-based drawing\nHierarchical graph drawing\nPlanarization-based graph drawing\nLabeling approaches<h2>ilo</h2>Properly classify different types of graphs and use correct terminology for graph aspects and properties\nExplain basic graph analyses and their computational complexity\nSelect and apply suitably algorithmic approaches for the automatic drawing of different types of diagrams\nExtend existing approaches for specific types of diagrams\nEvaluate graphs concerning common aesthetics criteria\nAfter successful completion of this module students will be able to judge for a given type of graph whether it can be drawn automatically and which algorithmic approaches are suitable. They will also be able to adapt existing drawing algorithms or to develop new approaches. Finally, students should also be able to perform a thesis project (Bachelor or Master) on the subject of graph drawing and to contribute to ELK and KIELER.", "<h2>CAU_Germany inf-TM</h2><h2>title</h2>Text Mining<h2>summary</h2>The digital age and the success of the Internet in particular has led to a huge amount of publicly available documents and textual information. The task of text mining is to process this unstructured information and extract knowledge. To this end, we will present methods, algorithms, and models that support a diverse set of text mining applications, ranging from regular expressions and lexicon-based sentiment analysis, to more complex methods using machine learning, such as probabilistic topic models.\n\n<h2>content</h2>\nFoundation of linguistics Information extraction Named entities Opinion mining & sentiment analysis Preprocessing of textual data Representation of documents Word associations Topic Modeling Foundations of machine learning Document classification Clustering Sequence labeling Visualizing textual data Ethics & bias<h2>ilo</h2>\nStudents are able to...\n\nunderstand basic concepts of text mining and their commercial application\nexplain, apply, and evaluate text mining methods\nimplement text mining applications in Python\n", "<h2>CAU_Germany inf-AuLearn</h2><h2>title</h2>Autonomous Learning<h2>summary</h2>Autonomous Learning research aims at understanding how autonomous systems can efficiently learn from the interaction with the environment, especially by having an integrated approach to decision making and learning, allowing systems to autonomously decide on actions, representations, hyper-parameters and model structures for the purpose of efficient learning. The term \"autonomous\" refers to the ability of the system to learn without or with only very limited external support, which includes manual intervention of humans, availability of pre-defined models or expert knowledge, and availability of large sets of sample data. Specific research topics are: Adaptation of the learning models / techniques based on observations, learning from interaction with the environment, re-using knowledge from one domain in another domain, detection of behaviour that deviates from 'usual' or expected behaviour, and learning from and with other systems of the same kind. The lecture gives an introduction to the field of autonomous learning with a particular focus on a utilisation of the different techniques within intelligent systems. Autonomous Learning is cutting edge research, which means that parts of the lecture are based on current research articles rather than on textbooks. Furthermore, a practitioner's perspective is combined with theoretical understanding of the concepts: the lecture units are combined with traditional exercises but also with practical tasks that have to be solved by making use of techniques discussed in the lecture.<h2>content</h2>\na) Introduction and organisation\n\nb) Machine learning basics\n\nc) Reinforcement Learning\n\nd) Anomaly/Novelty Detection\n\ne) Active Learning\n\nFurther (depending on time and scope), the following topics may be covered as well:\n\nf) Transfer Learning\n\ng) Model selection (hyper-parameter optimisation and evaluation)\n\nh) Collaborative Learning\n\ni) Summary and outlook (incl. meta-learning)<h2>ilo</h2>\nThe overall goal of the course is to derive a basic understanding of the motivation, the general concept, and particularly important methods covering the most prominent parts of the field of autonomous learning. This includes techniques for the following aspects of machine learning:\n\nFully autonomous learning behaviour: hyper-parameter optimisation, transfer learning, (self-)evaluation,\nself-awareness or environment-awareness with a major focus on anomaly/novelty detection\nBy interaction with the environment via sensors and actuators: reinforcement learning\nBy efficiently integrating humans into the learning process: active learning\nBy interacting with other intelligent systems: collaborative learning\nBy using all the above: meta-learning\nParticular goals are:\n\na) Knowledge / Skills:\n\nUnderstanding of methods for achieving \"intelligence\" in technical systems, control of learning behaviour with minimal user interaction, continuous self-improvement of system behaviour, cooperation in learning between distributed technical systems\n\nb) Abilities:\n\nSelection and application of techniques of machine learning in technical systems under real-world conditions to control autonomous system behaviour\n\nc) Competencies:\n\nAbility to analyse autonomous learning processes and their behaviour, to determine and interpret relevant assessment parameters / Competence to plan, design and develop intelligent technical systems with the ability to learn autonomously\n", "<h2>CAU_Germany inf-CI</h2><h2>title</h2>Computational Intelligence<h2>summary</h2>The term \"Computational Intelligence\" (CI) describes a branch of artificial intelligence. Essentially, it summarizes three biologically motivated areas of information processing: Based on algorithms of fuzzy logic and artificial neural networks as well as on the evolutionary algorithms, the mastery of complex systems is sought and combined with other, typically biologically-inspired, processes. Originally coined in the 1990s by the Institute of Electrical and Electronics Engineers (IEEE), the term is often used synonymously with soft computing nowadays. All included sub-areas have in common that they make mechanisms of natural (i.e. in particular biological, physical or social) problem-solving strategies usable for mathematical or engineering-technical issues. This is not aimed at a direct transfer or \"technical copy\", but at an understanding and imitation of the basic mechanisms. The procedures developed in this way are in contrast to exact mathematical procedures - one rather freely follows the motto: \"Permitted is what works\".\n\n<h2>content</h2>Introduction and organization\nComplex systems: definition, environment and mastery of complexity\nEmergence and self-organization\nFractal\nCellular Automata\nEvolutionary algorithms\nParticle swarm optimization\nAnt algorithms\nbee algorithms\nNeural networks\nSummary<h2>ilo</h2>The aim of the event is to provide a first overview of the field of computational intelligence in theory and practice. Based on this, students should be taught a basic understanding and appropriate approaches, so that the following goals in particular are achieved:\n\nStudents have a basic understanding of the complexity of technical systems and know how to master them.\nYou know how seemingly complex relationships with mechanisms of computational intelligence can be easily described.\nTechniques from the field of Computational Intelligence / Soft Computing as well as their advantages and disadvantages in comparison are known.", "<h2>CAU_Germany Inf-DigSig</h2><h2>title</h2>Multimedia Signal Processing and Data Compression\n<h2>summary</h2>There will be basic features of audiovisual information processing with applications in the compression and coding of audiovisual data. The basics of digital signal processing occupy a wide space (50%). Themes:\n\nBasics of human perception (psycho-optics and psycho-acoustics)\nBasics of digital signal processing\nBasics of data compression\nCompression of multimedia data using the example of JPEG and MPEG<h2>content</h2>\n\n1) Basics of human perception\n\nPsycho-optics\nPsycho-acoustics\n2) Basics of signal processing\n\nSignal models and system models\nContinuous and discrete signals\nContinuous and discreet Fourier transformation\nFiltering of audio signals\n3) Basics of data compression\n\nEntropy codes (Huffmann Code, Arithmetic Code)\nDictionaries (Lempel-Ziv)\n4) Application in the field of audiovisual information processing\n\nJPEG\nMPEG Video\nMPEG Audio<h2>ilo</h2>\n\nThe processing of real-world signals in the computer is a central task of digital signal processing. In this lecture, the basics of continuous and discrete signals as well as their representation and processing in the time and frequency range are discussed. These basics are explained in more detail in the context of data compression of multimedia data (JPEG, MPEG).\n\nThe lecture deals with the basics of signal processing (50%) as well as its use in the compression of audiovisual data (50%). The students learn the theoretical basics and apply them practically using the example of audio and video compression. Exercises are performed in Matlab/Oktav.", "<h2>CAU_Germany inf-IoT</h2><h2>title</h2>Internet of Things and Wireless Networks <h2>summary</h2>This course will introduce and discuss the underlying concepts and mechanisms that drive wireless networks and the Internet of Things (IoT). The lectures provide you with the required knowledge, and the labs give you a hands-on experience in developing networking and applications in the Internet of Things and exploring their real-world challenges.<h2>content</h2>\nWe begin the course with an introduction to basic concepts of IoT Systems and Applications and the challenges they pose. We continue with the main course content and focus on:\n\nWireless networking\nlow-power wireless communication (NFC, BLE and 802.15.4)\nIoT networking (RPL, TSCH, and Thread)\nweb-technologies for IoT such as COAP\nOperating Systems for IoT\nSecurity in IoT\nSelected IoT Applications\nOur lectures provide students with the required fundamentals, and exercise and projects give students a hands-on experience in developing IoT systems & applications and exploring their real-world challenges. This course offers learning experiences that involve hands-on experimentation and analysis as they reinforce student understanding of concepts and their application to real-world problems. Overall, this course provides the students the ability to understand fundamental issues in the design of methods for IoT systems and applications.<h2>ilo</h2>Knowledge and understanding: Show knowledge of basic concepts and challenges of wireless networking and the Internet of Things, low-power wireless communication, NFC, BLE and 802.15.4), IoT networking (RPL, TSCH, and Thread), Operating Systems for IoT, Security in IoT, and IoT Applications. Describe applications of the Internet of Things and the mechanisms these use to provide their services. Discuss and analyze the challenges and requirements that the different approaches have. Compare and summarize the strength and weaknesses associated with the individual mechanisms.\nSkills and abilities: Develop and evaluate small-scale wireless networks and IoT systems & applications using fundamental mechanisms introduced in the lectures. Demonstration of these software developments in advanced settings including unreliable wireless links and resource constraints (e.g., battery driven).\nJudgment and approach: Describe and analyze existing and new methods for IoT systems and application design. In particular, the system's ability for low-power wireless networking and operation under strong resource constraints.\nLehrinhalte:\nAim: What is the Internet of Things and its applications? How can we build reliable and resource efficient IoT systems and applications? How do its devices in the Internet of Things communicate? How do wireless networks work? These are a few questions that this course addresses. The goal of the courses is to understand the design of the Internet of Things and discuss the underlying principles and mechanisms. Our lectures provide you with the required fundamentals, and our labs give you a hands-on experience in developing IoT systems and applications and exploring their real-world challenges.\n", "<h2>CAU_Germany Inf-CombWords</h2><h2>title</h2>Combinatorics on Words<h2>summary</h2>This course is an extended introduction into the theory of combinatorics on words (aka strings or sequences). Connections to applications of string algorithms will be drawn in providing the combinatorial background to the course Algorithms on Sequences.\n<h2>content</h2>\nWe consider advanced properties of periods in finite and infinite words, word equations, circular words, subword complexity, fixed point words and avoidability questions.<h2>ilo</h2>\nA successful student of this course will have an in-depth knowledge combinatorial properties of sequential structures.", "<h2>CAU_Germany WInf-eBeM</h2><h2>title</h2>E-Business und E-Marketing<h2>summary</h2>In this module, important application systems and their implementation are considered as examples. In addition, the integration of subcomponents is considered. Deployment concepts are developed from a business point of view.<h2>content</h2>\n\nThe subject of the event is the following areas and subsystems of electronic commerce:\n\nWeb shops and eProcurement\nCustomer Relationship Management Systems (CRM)\nPublic administration systems (e.g. B. E-Government)\nmobile trade\nIntegration of systems, e.g. web shop with CRM and merchandise management systems\nTrade between companies and marketing concepts is considered.<h2>ilo</h2>The participants have an in-depth understanding of selected sub-areas of electronic commerce and other operational application systems. The theoretical aspects known from other events are supplemented by an understanding of the practical procedure. The students have experience in the practical use of the systems and know procedures for the systematic procedure. They have developed the first business models and can understand business models that are typical of electronic commerce.\n", "<h2>CAU_Germany inf-EERP</h2><h2>title</h2>Implementation of ERP systems\n<h2>summary</h2>The core task of ERP systems is the volume and value-related planning, recording and settlement of all essential business transactions of a company. ERP systems are therefore one of the central components of the IT landscape of larger companies today. Accordingly, new introductions or changes of these systems in larger companies are often highly complex and thus complex and expensive large-scale IT projects.\n\nThe high value of such software for companies can also be seen from the fact that the group with the currently largest market capitalization within the German stock index DAX\u00ae is neither a car manufacturer nor a classic industrial group, but a provider of corresponding business software. In this module, using the example of its ERP system (a) the knowledge about the support of operational processes by standard software is further deepened, (b) shows with which project management procedures and methods corresponding large-scale IT projects are carried out in practice, and (c) shows how an entire ecosystem can be formed around such a software product.<h2>content</h2>Overview of standard operational software using the example of the product portfolio of SAP SE from a business point of view (ERP, analytics, business networks) and from a technical point of view (database, application, user interface, data integration, artificial intelligence)\nMapping of common, operational processes in ERP standard software (stainable data, quantity and value flows)\nProcedures for the introduction and conversion of standard operational software using the example of large introductions of SAP\u00ae ERP software (classic, SAP\u00ae Activate/Focus Build, global rollout strategies) and organization of corresponding projects (ecosystem, project management processes)\nStrategies for the further development of standard operational software in the company (governance structures and processes)\nTrends (current situation in companies, technological innovations)<h2>ilo</h2>The students;\n\nhave an in-depth understanding of the range of applications of standard operational software\nhave an idea of the objectives, tasks and challenges of the introduction or Conversion of standard operational software\nknow the usual procedures for large-scale IT projects", "<h2>Kennesaw_USA CGDD2012L</h2><h2>title</h2>Fundamentals of Game Design Lab<h2>summary</h2>This course is the lab component of CGDD-2012. Students will learn to develop computer based video games using a modern game engine and a programming language. Students are required to develop a computer based prototype of an original game.<h2>ilo</h2>1. Develop a basic prototype of video games\r\n2. Demonstrate advanced skills in programming utilizing a high level game engine", "<h2>Kennesaw_USA IT4123</h2><h2>title</h2>Electronic Commerce<h2>summary</h2>This course will examine the aspects of electronic commerce. Topics include internet development, EDS, security, network connectivity and privacy. Basic business practices using electronic commerce will also be covered.<h2>ilo</h2>1. Analyze the needs of a business in relation to what requirements are needed to support the functions of the company for an e-commerce business plan.\r\n2. Describe the business models of e-commerce, including the process of e-commerce payment systems, e-commerce marketing concepts and e-commerce site preparation.\r\n3. Design and build a working e-commerce web-site prototype.\r\n4. Describe the basic parts of security for an e-commerce site, including how encryption works.\r\n5. Discuss and debate the pros and cons of the supply chain management model, and how new digital media support e-commerce.\r\n6. Understand the e-commerce concepts of auctions, portals and on-line communities, and describe the ethical, social and political issues of e-commerce.", "<h2>Kennesaw_USA IT4213</h2><h2>title</h2>Mobile Web Development<h2>summary</h2>This course introduces the concepts, practices, and technologies to design, develop, and manage cross-platform web sites and applications running on modern mobile devices.<h2>ilo</h2>1. Compare and contrast user interactions with web sites and applications delivered as desktop web, mobile web, and mobile application.\r\n2. Apply appropriate mobile user interface design principles and techniques to create responsive and touch friendly web user interfaces.\r\n3. Use latest web technologies and programming languages to create cross platform web sites and applications.\r\n4. Identify and use the appropriate development technologies, tools, and frameworks for mobile web development.", "<h2>Kennesaw_USA IT4203</h2><h2>title</h2>Advanced Web Development<h2>summary</h2>This course covers more advanced topics on web site design and development including server pages, programming, database integration, and web server systems and security administration.<h2>ilo</h2>1. Demonstrate use of advanced JavaScript features, including anonymous functions and closures\r\n2. Demonstrate use of advanced CSS features, including CSS 3 and responsive web pages\r\n3. Use Ajax to update pages with server data without reloading\r\n4. Use the features of HTML 5\r\n5. Demonstrate effective use of the jQuery framework.", "<h2>Kennesaw_USA CGDD4113</h2><h2>title</h2>3D Modeling and Animation<h2>summary</h2>This course explores the theory and application of 3D geometric model generation and animation. Topics include mesh and Non-uniform Rational B-Spline (NURB) modeling, textures, subdivision and levels of model detail, rigid/constrained body dynamics, and non-rigid/fluid dynamics. Students will be required to develop and animate a complex model, and a significant project is required <h2>ilo</h2>1. Describe the mathematics of 3D modeling and animation\r\n2. Apply 3D modeling animation in generating a complex rendered scene\r\n3. Utilize modern applications that streamline the modeling and animation process\r\n4. Discuss the complexity of modeling and animation and trade-offs between fidelity and performance", "<h2>Kennesaw_USA CGDD4603</h2><h2>title</h2>Production Pipeline and Asset Management<h2>summary</h2>This course provides an in-depth exploration of the production of media content. This course covers elements of the production pipeline from concept to content generation to post production and quality assurance. Topics include asset creation and management, cost-quality tradeoffs, and phases of production. Current and emerging models of the production pipeline such as user-generated content and participation will also be discussed. A significant, team-based project is required. <h2>ilo</h2>1. Describe the phases of game and media production\r\n2. Apply quality-assurance concepts in a game and media setting\r\n3. Work within a team environment to produce game media content\r\n4. Describe current and emerging models of game production and user-generated content", "<h2>Kennesaw_USA CS3626</h2><h2>title</h2>Cryptography<h2>summary</h2>The course covers both mathematical and practical foundations of cryptography. Topics include basic number theory for cryptography, conversion of text, and implementation using a programming language. The course includes historical cryptography, symmetric cryptography, asymmetric cryptography, hash functions, and well-known attack strategies with countermeasures. Exercises cover programming of simple cryptography in a programming language. <h2>ilo</h2>1. Explain the concepts, components, methodology, and architecture of cryptography;\r\n2. Discuss different foundations of cryptosystems;\r\n3. Compare and contrast symmetric, asymmetric cryptographies and their pros/cons;\r\n4. Explain vulnerability analysis and different layers of attacks;\r\n5. Implement text conversion for a cryptographic foundation;\r\n6. Implement a basic cryptography", "<h2>Kennesaw_USA CS3642</h2><h2>title</h2>Artificial Intelligence<h2>summary</h2>The primary objective of this course is to provide a introduction to the basic principles and applications of Artificial Intelligence. It covers the basic areas of artificial intelligence including problem solving, knowledge representation, reasoning, decision making, planning, perception and action, and learning -- and their applications. Students will design and implement key components of intelligent agents of modern complexity and evaluate their performance. Students are expected to develop familiarity with current research problems, research methods, and the research literature in AI. <h2>ilo</h2>1. Demonstrate understanding knowledge of AI knowledge representation\r\n2. Demonstrate understanding of advanced search and reasoning algorithms\r\n3. Design an AI system with Lisp or Prolog for problem solving", "<h2>Kennesaw_USA CS4265</h2><h2>title</h2>Big Data Analytics<h2>summary</h2>This course covers algorithms and tools that are needed to build MapReduce applications with Hadoop or Spark for processing gigabyte, terabyte, or petabyte-sized datasets on clusters of commodity hardware. A wide range of data algorithms will be discussed in this course. <h2>ilo</h2>1. Explain MapReduce framework for big data analytics\r\n2. Use Hadoop and Spark for big data analytics\r\n3. Design and implement a wide range of data algorithms", "<h2>Kennesaw_USA CS4267</h2><h2>title</h2>Machine Learning<h2>summary</h2>This course provides a broad introduction to machine learning and statistical pattern recognition including supervised, unsupervised, and ensemble learning. Topics include K-NN, Na\u00efve Bayes Classifier, parametric and non-parametric methods, support vector machines, kernel machines, neural networks, clustering, dimensionality reduction, and model evaluation. The learning theory including bias/variance tradeoffs and large margins will be introduced. This\u00a0course will also discuss recent applications of machine learning such as data mining, autonomous navigation, speech recognition, and text and web data processing. <h2>ilo</h2>1. Explain how supervised learning methods work\r\n2. Explain how unsupervised learning methods work\r\n3. Explain how ensemble methods work\r\n4. Apply proper machine learning techniques to solve challenging problems", "<h2>Kennesaw_USA CS4277</h2><h2>title</h2>Deep Learning<h2>summary</h2>This\u00a0course covers the foundations of Deep Learning; how to build neural networks and how to design successful deep learning projects. The\u00a0course topics include convolutional networks, sequence modeling such as recurrent and recursive neural networks (RNNs), long short-term memory (LSTM), Adam, Dropout, BatchNorm, Xavier/He initialization, state-of-the-art technologies, and research topics leveraging Deep Learning. The course includes programming assignments in Python and in TensorFlow. <h2>ilo</h2>1. Understand the state-of-the-art technologies and their trends driving Deep Learning\r\n2. Build, train, and apply fully connected deep neural networks\r\n3. Understand how to implement efficient neural networks\r\n4. Understand key parameters in Deep Learning architecture\r\n5. Explain how Deep Learning works\r\n6. Demonstrate the capability of communication with peers for research ideas in Deep Learning related fields", "<h2>Kennesaw_USA CS4322</h2><h2>title</h2>Mobile Software Development<h2>summary</h2>This course primarily focuses on mobile sensor application development and security of smartphones and mobile telecommunication systems. The goals of the course is to provide students with real world relevant mobile sensor app development and improve their knowledge and skills on mobile application development and mobile security. <h2>ilo</h2>1. Use Android Development Environment\r\n2. Design a user interface for a mobile device\r\n3. Use Android Development Libraries to develop mobile apps\r\n4. Test mobile apps", "<h2>Kennesaw_USA CS4412</h2><h2>title</h2>Data Mining<h2>summary</h2>This course covers fundamental data mining concepts and techniques for discovering interesting patterns from data in various applications. Topics include data preprocessing, data warehousing and OLAP, mining frequent patterns, classification, clustering, and tend analysis. <h2>ilo</h2>1. Explain fundamental data mining concepts and techniques\r\n2. Implement typical data mining algorithms\r\n3. Apply data mining techniques to solve real life problem\r\n4. Design and construct data warehouse", "<h2>Kennesaw_USA CS4422</h2><h2>title</h2>Information Retrieval<h2>summary</h2>This course covers the fundamentals of Internet search engines, including Web crawlers, inverted indices, hyperlink analysis, and relevance ranking. Also covered are advanced topics including information extraction for knowledge base construction, question answering, search marketing and ad targeting, and activity mining for relevance optimization and personalization. <h2>ilo</h2>1. Master the fundamentals of Web search engines\r\n2. Master the Web search related enabling technologies.\r\n3. Explore information extraction for knowledge base construction\r\n4. Explore search marketing and ad targeting\r\n5. Explore relevance optimization", "<h2>Kennesaw_USA CS4522</h2><h2>title</h2>HPC & Parallel Programming<h2>summary</h2>This course will introduce parallel programming techniques for shared memory and distributed memory systems. Topics include threading, OpenMP, and MPI. <h2>ilo</h2>1. Discuss the different processor and memory configurations used in HPC\r\n2. Implement programs for shared memory environments using OpenMP\r\n3. Implement programs for distributed memory environments using MPI", "<h2>Kennesaw_USA CS4524</h2><h2>title</h2>Cloud Computing<h2>summary</h2>This course discusses the fundamental concepts and techniques of cloud computing. Students will develop an understanding of cloud computing architecture, Infrastructure as a Service (IaaS), Platform-as-a-Service (PaaS), Software as a Service (SaaS), Virtualization, and Application Development on Cloud. <h2>ilo</h2>1. Explain fundamental concepts and architecture of Cloud Computing\r\n2. Explain the concepts of IaaS, PaaS, SaaS\r\n3. Explain virtualization\r\n4. Explain distributed computing environment on cloud\r\n5. Develop applications on cloud\r\n6. Conduct big data analytics on cloud", "<h2>Kennesaw_USA CS4612</h2><h2>title</h2>Software Security<h2>summary</h2>The course introduces the fundamental concepts and principles of software security. Topics covered include buffer overflows, defense mechanisms, return oriented programming, reverse engineering, vulnerabilities analysis. Additional topics: mobile security, hardware platform security, embedded system security. <h2>ilo</h2>1. Describe common vulnerabilities in software security and understand how to avoid such problems in software.\r\n2. Explain how various attack work in software systems.\r\n3. Evaluate and assess security threats, risks, and attack vectors for software systems.\r\n4. Design and implement security mechanisms to protect software systems.\r\n5. Understand security mechanisms in Android and iOS platforms.\r\n6. Discover vulnerabilities of software using various techniques.", "<h2>Kennesaw_USA CS4622</h2><h2>title</h2>Computer Networks<h2>summary</h2>This course covers computer networking and includes software application-related, protocol-related and security-related issues involved in the Internet. Topics include basic network structures, mechanisms for application-to-application communications, protocol layering, Internet addressing, unicast and multicast routing, connection establishment and termination, data flow and congestion control, and error handling. A specific protocol suite will be examined in detail. More advanced topics that build on the student's understanding of network protocols are also introduced, such as network security, mobile networks and the future Internet. <h2>ilo</h2>1. Demonstrate an understanding of a protocol suite and the core functionality defined in the application, transport, network, and link layers,\r\n2. Demonstrate an understanding of how network-based software applications interface with  and across  the network.\r\n3. Demonstrate an understanding of network addressing and related protocols and issues\r\n4. Demonstrate an understanding of network routing and theory, and related protocols\r\n5. Demonstrate an understanding of network security and related protocols and mechanism, focusing at the application, transport and network layers\r\n6. Acquire knowledge and expertise when introduced to emerging technologies relating to the mobile and wireless networks, and the Internet.", "<h2>Kennesaw_USA CS4626</h2><h2>title</h2>Computer and Network Security<h2>summary</h2>This course is a comprehensive study of the security principles and practices for computer systems and networks. Topics to be covered include basic security concepts, common network attack techniques and impacts, common security policies, Internet protocol vulnerabilities, basic cryptographic tools and secure protocols. Defense techniques such as authentication, access control, encryption, and network intrusion detection will be discussed. This course will also survey new and emerging network security topics, applications and technologies. Exercises for this course will include network programming in some language and using various tools in understanding and analyzing packet traces and network traffic. <h2>ilo</h2>1. Explain the concepts, components, methodology, and architecture of network security;\r\n2. Identify, classify and discuss some common network attacks and threats;\r\n3. Explain various network access control and authentication techniques, design principles, and protocols;\r\n4. Explain various encryption techniques and their vulnerabilities;\r\n5. Discuss some new and emerging network security topics, applications, and technologies.", "<h2>Kennesaw_USA CS4712</h2><h2>title</h2>User Interface Engineering<h2>summary</h2>A comprehensive study of techniques in design and implementation of user interfaces engineering. Topics include the foundation of human-computer interaction and interface related to software lifecycle, building a graphic user interface engineering, interaction devices and technologies, human-computer dialogue, cognitive models, usability, the design and development process, user interface management systems (UIMS), interface style and techniques, user learning, and diversity in interaction styles. Major research and the building of a working graphic user interface are included. <h2>ilo</h2>1. Describe basic user interface engineering definitions, concepts, and principles.\r\n2. Apply user interface concepts and principles to analyze and evaluate a variety of approaches to user interface design.\r\n3. Acquire an understanding of needs analysis of user interactions/interfaces, legal, ethical, and social issues.\r\n4. Design, develop, implement, and present a new user interface for an application applying concepts and principles of user interface.", "<h2>Kennesaw_USA CS4720</h2><h2>title</h2>Internet Programming<h2>summary</h2>This course introduces current technologies for modeling, designing, implementing, and developing Web applications. Topics include developing for the server and the client, programming frameworks, server administration and integration with databases. Practice will involve platforms and language such as Linux, Python, PHP, Ruby and JavaScript. <h2>ilo</h2>1. Master the architecture and basic operations of IDE\r\n2. Understand the fundamental concepts of web applications\r\n3. Model a project based on the MVC model using an MVC diagram\r\n4. Design a project with page-flow and dataflow, strategies for separating three layers, and methods for increasing software reusability and maintainability\r\n5. Control database CRUD\r\n6. Present term project and write documents", "<h2>Kennesaw_USA CS4732</h2><h2>title</h2>Machine Vision<h2>summary</h2>This course introduces concepts and techniques in machine vision. Students successfully completing this course will be able to apply a variety of image processing techniques for the design and analysis of efficient algorithms for real-world applications, such as optical character recognition, face detection and recognition, motion estimation, human tracking, and gesture recognition. Topics include basic image enhancement, corner and edge detection, image morphology, linear and non-linear filters, image transformations, camera models, two-dimensional and three-dimensional image geometry, clustering and segmentation (and classification), object recognition and Bag-of-Words models, image texture, shape analysis, and tracking. <h2>ilo</h2>1. Demonstrate a basic understanding of the design concepts in machine vision and image processing,\r\n2. Demonstrate understanding of a variety of efficient algorithms for machine vision such as basic image processing, face detection and recognition, motion estimation, human tracking, and gesture recognition,\r\n3. Be able to apply machine vision techniques to solve real-world problems using OpenCV or Matlab or other languages,\r\n4. Be able to utilize a state-of-the-art commercial machine vision package, and compare the computational complexity of different algorithms and analyze the time and space efficiency of the algorithms", "<h2>Kennesaw_USA CS4742</h2><h2>title</h2>Natural Language Processing<h2>summary</h2>This\u00a0course provides an introduction to the field of natural language processing (NLP). The topics include creating systems that can understand and produce language\u00a0for applications such as information extraction, machine translation, automatic summarization, question-answering, and interactive dialogue systems. This\u00a0course covers linguistic (knowledge-based) and statistical approaches to language processing in the areas of syntax (language structures), semantics (language meaning), and pragmatics/discourse (the interpretation of language in context). Students will design and develop programs for analyzing and extracting information from large online corpora. <h2>ilo</h2>1. Demonstrate understanding knowledge of NLP.\r\n2. Demonstrate understanding of syntax (language structures).\r\n3. Demonstrate understanding of semantics (language meaning), and\r\n4. Demonstrate understanding of pragmatics/discourse (the interpretation of language in context).\r\n5. Demonstrate the knowledge of NLP applications and implement NLP-related techniques with Python/Java/C++.", "<h2>Kennesaw_USA CSE1300</h2><h2>title</h2>Introduction to Computing Principles<h2>summary</h2>This course is an introductory computing principles course. Instruction centers on an overview of the history, scope, and impact of computing as well as critical, algorithmic and computational thinking on problem decomposition and fundamental programming concepts. <h2>ilo</h2>1. Synthesize how software has influenced innovations in other fields and helped people organizations and society to solve problems\r\n2. Use computational thinking to ask questions and find different ways to solve problems\r\n3. Design a solution to a program as an algorithm and convert the algorithm into a procedural program\r\n4. Objective 4 -Describe the differences between computing disciplines and identify possible job opportunities in the computing field", "<h2>Kennesaw_USA CSE3203</h2><h2>title</h2>Overview of Mobile Systems<h2>summary</h2>This course explores the use and issues of mobile applications in business including information security issues, connecting to cloud computing services, and mobile interface and programming. A significant design or development project will be created in the course. <h2>ilo</h2>1. Review basic elements of a mobile ecosystem\r\n2. Explain major technical features of mobile systems including connectivity hardware and software\r\n3. Compare major mobile app development approaches platforms and tools\r\n4. Discuss relevant mobile app development issues including user experience and security\r\n5. Develop native mobile apps", "<h2>Kennesaw_USA CSE4983</h2><h2>title</h2>CSE Computing Internship<h2>summary</h2>This course helps students gain practical experience through real-world projects and professional work. Students will demonstrate an ability to apply computing principles and technologies relevant to their major in a specific real-world project jointly supervised by an industry mentor and a faculty advisor. Students will work in\u00a0a project team in an enterprise environment\u00a0demonstrating ethical behavior as a computing professional, an understanding of social, professional and ethical issues related to computing, and an ability to integrate the knowledge acquired in preceding courses. Communication skills and leadership are also evaluated as well as professional computing skills and knowledge. 150+ hours per semester required at an internship site. The course can not be repeated for credit. <h2>ilo</h2>1. Demonstrate an ability to apply computing principles and technologies relevant to their major in a specific real-world project.\r\n2. Demonstrate an ability to work effectively in teams in a working environment.\r\n3. Demonstrate ethical behavior as a computing professional and an understanding of social, professional and ethical issues related to computing.\r\n4. Demonstrate both written and oral communication skills appropriate to the major to convey the tasks and accomplishments related to the internship assignment.\r\n5. Display the skills and knowledge to be employable in positions that utilize computing principles and technologies.\r\n6. Evaluate the skills and knowledge learned in the classroom in relation to the skills and knowledge required to complete the internship.", "<h2>Kennesaw_USA CYBR3153</h2><h2>title</h2>Database Systems<h2>summary</h2>The topics in this course span from a review of the traditional file processing systems to database management systems. Topics include files systems and file processing logic, planning, and major phases of database development: analysis, design and implementation. Labs use an SQL based database product such as Oracle. <h2>ilo</h2>1. Describe basic database terminology\r\n2. Analyze an Enterprise using E R diagrams and develop the conceptual model through normalization\r\n3. Describe basic parts of the relational database model the object-oriented model and file organizations\r\n4. Create modify and query databases using the SQL language\r\n5. Describe the client-server model for databases and how relational databases can be used on the internet\r\n6. Create an application using a database", "<h2>Kennesaw_USA CYBR3220</h2><h2>title</h2>Global IS Project Management<h2>summary</h2>In this course, students will be exposed to the basic principles of Global Project Management, effective teamwork and collaboration. It will prepare students to understand key issues in global project management such as project initiation, planning, scheduling, budgeting, risk analysis, quality management and communicating and collaborating across political and cultural boundaries. Tools such as Microsoft Project will be used to develop and track Information Systems projects. <h2>ilo</h2>1. Describe project design and management\r\n2. Explain planning, design, and team concepts\r\n3. Explain project control mechanisms, estimating techniques and risk assessment\r\n4. Discuss budget planning, integration, reporting, and tracking in PM.\r\n5. Demonstrate Microsoft Project, illustrate projects in writing and presentation\r\n6. Integrate business law and ethics in Information Systems projects.\r\n7. Use computer applications to solve common problems at school, work or home.  \r\n8. Explain how diverse culture facilitates innovation and project success.", "<h2>Kennesaw_USA CYBR3223</h2><h2>title</h2>Software Acquisition and Project Management<h2>summary</h2>The course provides a high level introduction to two areas that are crucial to the IT profession, namely project management and software acquisition. It introduces students to the phases both in the project management and software acquisition and implementation process. Since requirements are crucial to both activities, the course will provide students with an in-depth introduction to requirements engineering. The course will also introduce students to a widely used project management information system. <h2>ilo</h2>1. Discuss the elements of the basic Software Development Life Cycle and implement an analysis and design of a project using current project management tools\r\n2. Compare and contrast the advantages and disadvantages of building vs buying a software system\r\n3. Identify the elements and challenges of requirements engineering and project management\r\n4. Identify the project phases and challenges of acquiring, integrating and implementing a software package\r\n5. Evaluate a Request for Proposal for a software package", "<h2>Kennesaw_USA CYBR3305</h2><h2>title</h2>Technology and Criminal Justice<h2>summary</h2>This course involves an in-depth study of technology as it relates to crime and the criminal justice system. Topics discussed include technology associated with criminal investigations, law enforcement practices, offender monitoring and supervision, and homeland security. Legal issues and laws pertaining to the use of technology for investigative purposes, privacy issues, and fourth amendment issues are examined. Various technologies used by police, courts, and corrections are also addressed. <h2>ilo</h2>1. Identify specific technologies used by police, courts, corrections, and the privatecriminal justice sector in their daily operations.\r\n2. Describe how technology is used in the criminal justice system to prevent andcontrol crime.\r\n3. Examine empirical research which examines the effectiveness of technology inpreventing and controlling crime.\r\n4. Appraise the value of technologies used to prevent and control crime.\r\n5. Restate the effectiveness of technology in preventing and controlling crime.", NaN, NaN, NaN, "<h2>Kennesaw_USA CYBR4333</h2><h2>title</h2>Network Configuration & Administration<h2>summary</h2>This course continues the study of networks. Topics include design and implementation of networks including synchronization, scheduling, exception and deadlock resolution, client server and web based collaborative systems. Network security will also be covered. Cost estimates and speed are examined from a management perspective. <h2>ilo</h2>1. Demonstrate how to manage network systems\r\n2. Apply the various management strategies to managing networks\r\n3. Describe concepts of network configuration management\r\n4. Demonstrate knowledge of SNMP, SMI, MIB, RMONI, RMON\r\n5. Demonstrate skills in configuring specialized network security software", "<h2>Kennesaw_USA CYBR4350</h2><h2>title</h2>Management of Digital Forensics and eDiscovery<h2>summary</h2>This course explores the key issues in digital forensics: the detection, isolation and response to security breaches and attacks. It provides specific procedures required to respond to a computer crime incident and also provides coverage of the entire digital forensic sequence and the eDiscovery process within organizations. <h2>ilo</h2>1. Define and explain the role of digital forensics in the incident response and investigatory process\r\n2. Identify the requirements for proper evidence collection, handling and storage\r\n3. Identify and explain basic techniques to properly collect and analyze evidentiary data using appropriate tools and techniques in common scenarios\r\n4. Organize and present evidentiary data and investigatory findings for use in corporate or legal proceedings.", NaN, "<h2>Kennesaw_USA CYBR4833</h2><h2>title</h2>Wireless Security<h2>summary</h2>This course explores the theory and practice of securing wireless networks from threats and attacks. Topics include Cryptography, Network Security Protocols, Security and Layered Architecture, Voice-Oriented Wireless Networks, Data-Oriented Wireless Networks, Security in Traditional Wireless Networks, Security in Wireless LAN, and Security in Wireless Ad Hoc Networks. <h2>ilo</h2>1. Describe the fundamental concepts of information security\r\n2. Discuss the difference between wireless network security and wired network security\r\n3. Explain the security protocols and solutions for data-oriented and voice-oriented wireless systems\r\n4. Outline the security issues and solutions in mobile security", "<h2>Kennesaw_USA CYBR4843</h2><h2>title</h2>Ethical Hacking for Effective Defense<h2>summary</h2>This course explores the identification and validation of network and system vulnerabilities by taking an adversarial approach to network, system, and data access. Topics include network attacks and defenses, Operating System and application vulnerabilities, social engineering attacks, and malware. Ethical, legal implications of network attacks are also discussed. <h2>ilo</h2>1. Explain what an ethical hacker can and cannot do legally\r\n2. Describe security threats and vulnerabilities\r\n3. Use hacking tools to locate and fix security leaks\r\n4. Identify operating systems vulnerabilities\r\n5. Explain cryptosystems and describe attacks on cryptosystems\r\n6. Analyze network security vulnerabilities and technical controls", "<h2>Kennesaw_USA CYBR4853</h2><h2>title</h2>Computer Forensics<h2>summary</h2>This course is an exploration of the tools and techniques used to conduct digital investigations. It will include digital evidence collection, recovery, and analysis. Topics are Legal issues relating to digital evidence, recovery of deleted files and discovery of hidden information, reconstruction of user activity from e-mail, temporary Internet files and cached data, assessment of the integrity of system memory and process architecture to reveal malicious code. <h2>ilo</h2>1. Define and explain the role of digital forensics in the incident response and investigatory process\r\n2. Identify the requirements for proper evidence collection, handling and storage\r\n3. Identify and explain basic techniques to properly collect and analyze evidentiary data using appropriate tools and techniques in common scenarios\r\n4. Organize and present evidentiary data and investigatory findings for use in corporate or legal proceedings", "<h2>Kennesaw_USA CYBR4883</h2><h2>title</h2>Infrastructure Defense<h2>summary</h2>This course provides an overview of the infrastructure assessment and penetration testing process and the processes and techniques for improving the defensibility of that infrastructure. <h2>ilo</h2>1. Apply problem solving skills, core IT concepts, best practices and standards to information technologies\r\n2. Identify and evaluate organizational requirements and current and emerging technologies\r\n3. Communicate effectively, both in writing and in speaking\r\n4. Demonstrate an ability to participate effectively in the planning and execution of team projects", "<h2>Kennesaw_USA CYBR4893</h2><h2>title</h2>Internet of Things: Applications and Security<h2>summary</h2>This course introduces core knowledge and skills required to develop, design and secure IoT solutions. Students will analyze requirements, develop human-device interaction and learn about broader trends and characteristics in IoT. In addition, students will evaluate the security design of IoT-connected products. <h2>ilo</h2>1. Define the meaning of internet of things in various IoT application domains  smart cities, smart environment, eHealth, etc.\r\n2. Illustrate the impact of IoT on existing business models and business use cases\r\n3. Explain the IoT in conjunction with big data, applications, and mobility\r\n4. Illustrate IoT security challenges and the impact of IoT on consumer privacy\r\n5. Define the components required for the internet of things\r\n6. Design and develop a smart device", "<h2>Kennesaw_USA IT3503</h2><h2>title</h2>Foundations of Health Information Technology<h2>summary</h2>This course introduces students to the field of health information technology (HIT). Students will become familiar with the content, use, and structure of the health care data and medical records, health information management, the fundamentals of healthcare workflow and process analysis and redesign as a necessary component of complete practice automation, and health information systems. Students will also become familiar with the health care delivery systems in the U.S. and IT organizations and resources. <h2>ilo</h2>1. Describe the healthcare delivery systems and different healthcare settings in the U.S. and the reimbursement methodologies utilized in healthcare organizations\r\n2. Describe the factors that had led to a need for health information technology and Electronic Health Record systems\r\n3. Provide examples of different types of health information technology used in the healthcare organizations\r\n4. Explain the importance of health data management and performance improvement activities in the healthcare environment\r\n5. Identify the effect the ethical and legal issues on health information technology\r\n6. Explain HIPAA and HITECH regulations and analyze ways to maintain the privacy and security of protected health information\r\n7. Recognize the future of health information technology in order to be an organizational resource in this topic area", "<h2>Kennesaw_USA IT3703</h2><h2>title</h2>Introduction to Data Analytics and Technology<h2>summary</h2>This course provides a comprehensive overview of processing technologies, systems, and application. Latest trends in data analytics, big data, and data science will be introduced. <h2>ilo</h2>1. Describe the role of data and data technologies in today\u00e2\u20ac\u2122s organizational environments.\r\n2. Identify key functional areas and trends in data management and analytics.\r\n3. Describe common data formats and models used in data driven solutions.\r\n4. Compare and contrast technologies, systems, and approaches used for data and information management.\r\n5. Analyze the general process and the methods involved in a data analytics solution.", "<h2>Kennesaw_USA IT4153</h2><h2>title</h2>Advanced Database<h2>summary</h2>This course will study how databases are used with programming applications. Topics include advanced PL/SQL (or similar database programming language), database transaction, database security, database maintenance, and distributed and web databases. <h2>ilo</h2>1. Understand and describe current and emerging database models and technologies\r\n2. Develop functions and procedures for data manipulation and database access auditing\r\n3. Describe database monitoring and performance tuning\r\n4. Describe database security and administration issues, including backup and recovery\r\n5. Explain the concepts of data warehousing and data mining", "<h2>Kennesaw_USA IT4333</h2><h2>title</h2>Network Configuration & Administration<h2>summary</h2>This course continues the study of networks. Topics include design and implementation of networks including synchronization, scheduling, exception and deadlock resolution, client server and web based collaborative systems. Network security will also be covered. Cost estimates and speed are examined from a management perspective. <h2>ilo</h2>1. Demonstrate how to manage network systems\r\n2. Apply the various management strategies to managing networks\r\n3. Describe concepts of network configuration management\r\n4. Demonstrate knowledge of SNMP, SMI, MIB, RMONI, RMON\r\n5. Demonstrate skills in configuring specialized network security software", "<h2>Kennesaw_USA IT4403</h2><h2>title</h2>Advanced Web and Mobile Applications<h2>summary</h2>This course covers advanced topics on web and mobile applications with a focus on modern web application architectures and mobile friendly user interfaces. Students will complete one major development project using the latest web technologies. <h2>ilo</h2>1. Explain modern web application architectures and related concepts.\r\n2. Compare major mobile and web development approaches, platforms, and tools.\r\n3. Examine and use popular web APIs.\r\n4. Apply appropriate web and mobile user interface design principles and techniques.\r\n5. Create a cross-platform mobile web application using the latest web technologies and services.", "<h2>Kennesaw_USA IT4423</h2><h2>title</h2>Linux/Unix Administration<h2>summary</h2>This course introduces Linux/Unix operating systems. Topics include system administration, file systems and access permissions, regular expression, common tools and utilities, and network service configurations. Lessons will be enhanced using hands-on exercises. <h2>ilo</h2>1. Describe concepts and structure of the Linux/Unix operating system\r\n2. Use common commands and utilities for general file system operations\r\n3. Write shell scripts for common shell environment\r\n4. Perform system administration tasks to manage files, software, storage, users, processes and services\r\n5. Configure TCP/IP networking and common network/internet services and clients such as SSH, FTP, Web\r\n6. Install critical software on Linux, such as Apache, MySQL, and Python  LAMP", "<h2>Kennesaw_USA IT4513</h2><h2>title</h2>Electronic Health Record Systems & Applications<h2>summary</h2>This course provides an overview of the importance of key technical aspects of electronic health records, the overall architecture, features and functions of major EHR systems. Hands-on exercises with EHR systems allow students to learn by doing. <h2>ilo</h2>1. Explain the terminology, concept and functionality of EHR systems\r\n2. Identify a set of widely adopted standards for EHR systems\r\n3. Describe how EHRs change the healthcare delivery workflows and how to manage the change\r\n4. Demonstrate a working knowledge of principles and practices of EHR systems in different healthcare settings\r\n5. Analyze challenges and emerging trends of EHR systems\r\n6. Recognize the future of health information technology in order to be an organizational resource in this topic area", "<h2>Kennesaw_USA IT4523</h2><h2>title</h2>Clinical Processes and Workflows: Analysis and Redesign<h2>summary</h2>This course introduces the fundamentals of healthcare workflow and process analysis and redesign as a necessary component of complete practice automation. Students will become familiar with the concepts of processes, process analysis and redesign in the healthcare settings. Workflow and process mapping in healthcare improvement including detailed guidance, helpful tools, and case studies are introduced. <h2>ilo</h2>1. Identify the elements involved in patient care in different health care settings that must be taken into consideration when examining and proposing changes in workflow processes\r\n2. Use tools to create different diagrams of processes that support healthcare workflow analysis and redesign\r\n3. Analyze the workflow processes in healthcare settings to determine their effectiveness\r\n4. Evaluate and select ways in which quality improvement methods, tools and health information technology can be applied to improve healthcare workflow processes\r\n5. Evaluate and select approaches that would ensure the success of workflow redesign from development and presentation of the implementation plan to facilitation of decision making meetings, implementation of the changes, evaluation of the new processes, sustainability of new workflow processes, and continuous quality improvement efforts to achieve meaningful use", "<h2>Kennesaw_USA IT4533</h2><h2>title</h2>Health information Security and Privacy<h2>summary</h2>Health information security and privacy are of utmost importance in today's healthcare environment. This course introduces the concepts, practices and concerns of information privacy and security unique to the healthcare settings. The course provides the student with a thorough understanding of the HIPAA security and privacy rules, meaningful use security requirements, security risk assessment and management, and how to integrate privacy and security into medical practices. Resources of privacy and security in healthcare are provided. <h2>ilo</h2>1. Describe the concepts of information privacy and security in healthcare\r\n2. Describe and use HIPAA privacy and security regulations and Meaningful Use  MU  security requirements\r\n3. Discuss the components involved in an information security management program in the modern healthcare environment\r\n4. Demonstrate familiarity with resources for information privacy and security in healthcare", "<h2>Kennesaw_USA IT4603</h2><h2>title</h2>Introduction to Blockchain Technologies<h2>summary</h2>This course covers the foundation of IT application and innovation. Topics include but not limited to blockchain and cryptocurrencies, Bitcoin, Ethereum, smart contracts, decentralized applications, machine learning and its applications in the enterprise, security and privacy concerns, operational risks as part of the IT support transformation. <h2>ilo</h2>1. Describe the core and novel sources of blockchain technologies, how does it work. \r\n2. Compare critical technology strategies and foundational technologies in blockchain \r\n3. Identify the differences between the most prominent blockchain structure.\r\n4. Describe technologies underlying cryptocurrencies and blockchains.\r\n5. Implement a blockchain, and how to write a \u201csmart contract\u201d in Python/Ethereum.", NaN, NaN, "<h2>Kennesaw_USA IT4733</h2><h2>title</h2>Big Data System Administration<h2>summary</h2>This course introduces contemporary distributed big data platforms and database systems. Topics include big data computing paradigms, big data platform architectures and administration, and big data database concepts and administration. <h2>ilo</h2>1. Explain the contemporary big data computing paradigm.\r\n2. Compare NoSQL database systems with traditional database systems.\r\n3. Perform system administration on contemporary big data platforms", "<h2>Kennesaw_USA IT4773</h2><h2>title</h2>Machine Learning for Enterprise Applications<h2>summary</h2>This course covers enterprise applications of machine learning on data analytics.\u00a0 Topics span the complete life cycle of data analytics from envisioning the problem, identifying proper data, selecting suitable machine learning methods, evaluating modeling performance, and deploying the results to improve decision-making. <h2>ilo</h2>1. explain the concepts of supervised and unsupervised learning\r\n2. explain the concepts of how machine learning fits in the organization/enterprise and leads to competitive advantages. \r\n3. Perform data analytics using supervised and unsupervised learning. \r\n4. Evaluate the performance of machine learning models on data analysis.", "<h2>Kennesaw_USA IT4793</h2><h2>title</h2>Applied Data Driven Solutions<h2>summary</h2>This course will apply data technologies and applications in a chosen application domain and expose students to real world problems and issues. Students will analyze, design, and develop a practical and technical data driven solution in a chosen field, such as healthcare, finance, security, social media, academia, sports, and utilities. <h2>ilo</h2>1. Describe common data concepts, practices, and issues in a chosen domain.\r\n2. Analyze practical problems and requirements in a context (a company, organization, or other entities).\r\n3. Design and develop a technical solution driven by data technologies to address the problems identified.", "<h2>Kennesaw_USA IT4833</h2><h2>title</h2>Wireless Security<h2>summary</h2>This course covers methods and techniques to secure wireless networks against threats and attacks. The topics may include Security and Cryptography, Network Security Protocols, Security and Layered Architecture, Voice-Oriented Wireless Networks, Data-Oriented Wireless Networks, Security in Traditional Wireless Networks, Security in Wireless LAN, Security in Wireless Ad Hoc Network, Special Topics such as Mobile Security. <h2>ilo</h2>1. Describe the fundamental concepts of information security\r\n2. Discuss the difference between wireless network security and wired network security\r\n3. Explain the security protocols and solutions for data-oriented and voice-oriented wireless systems\r\n4. Outline the security issues and solutions in mobile security", "<h2>Kennesaw_USA IT4843</h2><h2>title</h2>Ethical Hacking for Effective Defense<h2>summary</h2>This course focuses on detection of network and system vulnerabilities by taking an attacker-like approach to system, network, and data access. Topics include network attacks and defenses, Operating System and application vulnerabilities, social engineering attacks, and malware. Ethical, legal implications of network attacks are also discussed. <h2>ilo</h2>1. Explain what an ethical hacker can and cannot do legally\r\n2. Describe security threats and vulnerabilities\r\n3. Use hacking tools to locate and fix security leaks\r\n4. Identify operating systems vulnerabilities\r\n5. Explain cryptosystems and describe attacks on cryptosystems\r\n6. Analyze network security vulnerabilities and technical controls", "<h2>Kennesaw_USA IT4853</h2><h2>title</h2>Computer Forensics<h2>summary</h2>This course studies techniques and tools in computing investigation, digital evidence collection, recovery, and analysis. Topics include: Legal issues relating to digital evidence, recover deleted files and discover hidden information, reconstruct user activity from e-mail, temporary Internet files and cached data, assess the integrity of system memory and process architecture to reveal malicious code. <h2>ilo</h2>1. Define and explain the role of digital forensics in the incident response and investigatory process\r\n2. Identify the requirements for proper evidence collection, handling and storage\r\n3. Identify and explain basic techniques to properly collect and analyze evidentiary data using appropriate tools and techniques in common scenarios\r\n4. Organize and present evidentiary data and investigatory findings for use in corporate or legal proceedings", "<h2>Kennesaw_USA IT4863</h2><h2>title</h2>Web and Mobile Application Security<h2>summary</h2>This course introduces web and mobile application security issues, hands-on practices to explore security vulnerabilities, and best practices to defend against vulnerabilities in web and mobile. <h2>ilo</h2>1. Describe common web and mobile security vulnerabilities \r\n2. Exploit web and mobile vulnerabilities with hands-on tools\r\n3. Defend against common web and mobile vulnerabilities", "<h2>Kennesaw_USA IT4883</h2><h2>title</h2>Infrastructure Defense<h2>summary</h2>This course provides an overview of the infrastructure assessment and penetration testing process and the processes and techniques for improving the defensibility of that infrastructure. <h2>ilo</h2>1. Apply problem solving skills, core IT concepts, best practices and standards to information technologies\r\n2. Identify and evaluate organizational requirements and current and emerging technologies\r\n3. Communicate effectively, both in writing and in speaking\r\n4. Demonstrate an ability to participate effectively in the planning and execution of team projects", "<h2>Kennesaw_USA IT4893</h2><h2>title</h2>Internet of Things: Applications and Security<h2>summary</h2>This course introduces core knowledge and skills required to develop and design innovative IoT solutions. Students will analyze the challenges, apply appropriate patterns for user-interaction and learn about trends and characteristics in IoT. In addition, students will evaluate the security design of a suite of IoT-connected products. <h2>ilo</h2>1. Define the meaning of internet of things in various IoT application domains  smart cities, smart environment, eHealth, etc.\r\n2. Illustrate the impact of IoT on existing business models and business use cases\r\n3. Explain the IoT in conjunction with big data, applications, and mobility\r\n4. Illustrate IoT security challenges and the impact of IoT on consumer privacy\r\n5. Define the components required for the internet of things\r\n6. Design and develop a smart device", "<h2>Kennesaw_USA SWE3683</h2><h2>title</h2>Embedded Systems Analysis and Design<h2>summary</h2>The analysis and design course focuses on using modern methods, techniques, and tools for specification and design of embedded systems. Topics include analytical methods such as RMA, development methods such as HOOD, and notations like UML, Petri-nets, etc. are covered. Performance evaluation based on modeling and simulation techniques is also covered. This is a project based course. <h2>ilo</h2>1. Understand the importance of embedded systems, the challenges involved, and systematic approaches to building such systems.\r\n2. Explain and implement fundamental principles and methodologies of embedded software development effectively utilizing current OOAD methodologies.\r\n3. Appreciate engineering issues in the development of embedded software, such as user concerns, maintainability, dependability and safety, and division of labor.\r\n4. Analyze a software development problem, express it succinctly and precisely, design module structures to solve a problem, and evaluate alternatives.\r\n5. Implement a module so that it executes efficiently and correctly.\r\n6. Work in a small team on an embedded systems project of significant scale and scope.\r\n7. Apply knowledge about software requirements, design, construction, project management, and quality to an embedded systems project.\r\n8. Effectively use embedded operating systems, CASE tools, languages, etc.\r\n9. Understand the scope, roles, uses, and development trends of the most widely used embedded software engineering standards.", "<h2>Kennesaw_USA SWE4633</h2><h2>title</h2>Cloud Software Development<h2>summary</h2>This course discusses the fundamental concepts and tools of cloud-based application development. Students will learn how to develop apps on top of the cloud with an understanding of various contemporary cloud providers (e.g., Amazon Web Services, Google Cloud, or Microsoft Azure). Students will do hands-on projects focused on building cloud-run applications using their platform of choice. <h2>ilo</h2>1. Describe an apply principles of cloud-based application development\r\n2. Describe service models in cloud computing\r\n3. Describe and apply the principles of Cloud Web Services and its related technologies\r\n4. Design and develop applications in the cloud", "<h2>Kennesaw_USA SWE4743</h2><h2>title</h2>Object-Oriented Development<h2>summary</h2>This course involves engineering activities related to the analysis, design, and implementation of object-oriented software systems. Topics include modeling foundations, requirements specification and documentation, design concepts and strategies, and OOAD methodologies with an emphasis on UML. The course includes a major project utilizing current analysis and design methods and tools implemented in a contemporary IDE. <h2>ilo</h2>1. Understand and be able to apply the principles of object-oriented software engineering to software analysis design and development\r\n2. Utilize current OO design and analysis methodologies such as UML responsibility-driven design and data-driven design effectively\r\n3. Use current software tools to effectively model specify design and develop object-oriented software systems using common OO design patterns", "<h2>Kennesaw_USA SWE4783</h2><h2>title</h2>User Interaction Engineering<h2>summary</h2>This course covers the basic theories and principles applied to the design of human-computer interfaces. It introduces students to the basic concepts used in designing interactions. It will cover the basic theory and methods that exist in the field. Case studies are used throughout the readings to exemplify the methods presented and to lend a context to the issues discussed. This\u00a0course will focus on the semiotic engineering approach to human-computer interaction, in which the interaction is analyzed in terms of communication between the designers of the artifact and the user. <h2>ilo</h2>1. Know and use User Interaction Engineering principles and guidelines\r\n2. Gather the user and task characteristics to form an interaction dialogue which is evaluated by the user to be satisfactory\r\n3. Design and build an interface system that meets the goals of the user interaction dialogue\r\n4. Perform a user interaction evaluation", "<h2>Kennesaw_USA SWE4803</h2><h2>title</h2>Independent Study<h2>summary</h2>Independent study/project under the direction of a member of the graduate faculty. Course description will vary. <h2>ilo</h2>1. Design and implement a complete serious educational game\r\n2. Evaluate or conduct research on a serious educational game\r\n3. Build a working knowledge of principles and practices in computer game design and implementation\r\n4. Develop skills in problem solving system integration and interface design\r\n5. Communicate  written and verbally  about a complex technical topic simply and coherently", "<h2>UofT_Canada CSC301H5</h2><h2>title</h2>Introduction to Software Engineering<h2>content</h2>An introduction to agile development methods appropriate for medium-sized teams and rapidly-moving projects. Basic software development infrastructure; requirements elicitation and tracking; estimation and prioritization; teamwork skills; basic UML; design patterns and refactoring; security.", "<h2>UofT_Canada CSC309H5</h2><h2>title</h2>Programming on the Web<h2>content</h2>An introduction to software development on the web. Concepts underlying the development of programs that operate on the web; survey of technological alternatives; greater depth on some technologies. Operational concepts of the internet and the web, static client content, dynamic client content, dynamically served content, n-tiered architectures, web development processes, and security on the web. Assignments involve increasingly more complex web-based programs.", "<h2>UofT_Canada CSC311H5</h2><h2>title</h2>Introduction to Machine Learning<h2>content</h2>An introduction to methods for automated learning of relationships on the basis of empirical data. Classification and regression using nearest neighbour methods, decision trees, linear models, and neural networks. Clustering algorithms. Problems of overfitting and of assessing accuracy. Basics of reinforcement learning.", "<h2>UofT_Canada CSC324H5</h2><h2>title</h2>Principles of Programming Languages<h2>content</h2>Major topics in the development of modern programming languages. Syntax specification, type systems, type inference, exception handling, information hiding, structural recursion, run-time storage management, and programming paradigms. Two non-procedural programming paradigms: functional programming (illustrated by languages such as Lisp, Scheme, ML or Haskell) and logic programming (illustrated by languages such as Prolog, XSB or Coral).", "<h2>UofT_Canada CSC338H5</h2><h2>title</h2>Numerical Methods<h2>content</h2>Computational methods for solving numerical problems in science, engineering and business. Linear and non-linear equations, approximation, optimization, interpolation, integration and differentiation. The aim is to give students a basic understanding of floating-point arithmetic and the implementation of algorithms used to solve numerical problems, as well as a familiarity with current numerical computing environments.Course concepts are crucial to a wide range of practical applications such as computational finance and portfolio management, graphics and special effects, data mining and machine learning, as well as robotics, bioinformatics, medical imaging and others.", "<h2>UofT_Canada CSC347H5</h2><h2>title</h2>Introduction to Information Security<h2>content</h2>An investigation of many aspects of modern information security. Major topics cover: Techniques to identify and avoid common software development flaws which leave software vulnerable to crackers. Utilizing modern operating systems security features to deploy software in a protected environment. Common threats to networks and networked computers and tools to deal with them. Cryptography and the role it plays in software development, systems security and network security.", "<h2>UofT_Canada CSC367H5</h2><h2>title</h2>Parallel Programming<h2>content</h2>Introduction to aspects of parallel programming. Topics include computer instruction execution, instruction-level parallelism, memory system performance, task and data parallelism, parallel models (shared memory, message passing), synchronization, scalability and Amdahl's law, Flynn taxonomy, vector processing and parallel computing architectures.", "<h2>UofT_Canada CSC375H5</h2><h2>title</h2>Algorithmic Intelligence in Robotics<h2>content</h2>Robots of the future will need to operate autonomously in unstructured and unseen environments. It is imperative that these systems are built on intelligent and adaptive algorithms. This course will introduce fundamental algorithmic approaches for building an intelligent robot system that can autonomously operate in unstructured environments such as homes and warehouses. This course introduces the broad philosophy of \u201cSense-Plan-Act\u201d, and covers algorithms in each of these areas -- how should the robot perceive the world, how to make long term decisions and how to perform closed-loop control of articulated robots.", "<h2>UofT_Canada CSC376H5</h2><h2>title</h2>Fundamentals of Robotics<h2>content</h2>An introduction to robotics covering basic methodologies, tools, and concepts to build a foundation for advanced topics in robotics. The course covers robot manipulators; kinematics; motion planning; and control. Topics covered in lecture will be implemented and explored in a practical environment using robots from different application domains.", "<h2>UofT_Canada CSC384H5</h2><h2>title</h2>Introduction to Artificial Intelligence<h2>content</h2>Theories and algorithms that capture (or approximate) some of the core elements of computational intelligence. Topics include: search, logical representations and reasoning, classical automated planning, representing and reasoning with uncertainty, learning, decision making (planning) under uncertainty. Assignments provide practical experience, in both theory and programming, of the core topics.", "<h2>UofT_Canada CSC413H5</h2><h2>title</h2>Neural Networks and Deep Learning<h2>content</h2>An introduction to neural networks and deep learning. Backpropagation and automatic differentiation. Architectures: convolutional networks and recurrent neural networks. Methods for improving optimization and generalization. Neural networks for unsupervised and reinforcement learning.", "<h2>UofT_Canada CSC488H5</h2><h2>title</h2>Compilers and Interpreters<h2>content</h2>Compiler organization, compiler writing tools, use of regular expressions, finite automata and content-free grammars, scanning and parsing, runtime organization, semantic analysis, implementing the runtime model, storage allocation, code generation.", "<h2>UOC_Spain 05.574</h2><h2>title</h2>Computer networks security<h2>summary</h2>This course presents the problem of security in computer networks, and more specifically in TCP/IP networks.\n\nThe structure of this course follows the following model. First, the problem of security in TCP/IP networks is presented. Once we have seen the possible security problems in this type of network, we will focus on the prevention mechanisms that exist, based mainly on information filtering. Subsequently, and assuming that not all TCP/IP network prevention and protection systems are infallible, we will study the different intrusion detection mechanisms that exist. Finally we will highlight the specific protection techniques that exist. Specifically, we will introduce the basic notions of cryptography that will allow us to understand the operation of different mechanisms and applications that allow us to protect ourselves against attacks.\n\nThe focus of this course assumes that the student already has basic knowledge about the operation of TCP/IP networks and the Unix work environment. Its orientation is eminently practical and implies that the student must dedicate an effort to the installation and configuration of the software, as part of the evaluable objectives of the subject.<h2>content</h2>Introduction to computer security\n\nSafety and risks\ncomputer attacks\nDefense and computer security\nfirewall systems\n\nTypes of firewall systems\nImplementation of security policies through perimeter security\niptables\nIntrusion detection systems\n\nCyber \u200b\u200bdefense and intrusion detection tools\nManagement of events, alerts and incidents\nsnort\nSecurity in the communications layers\n\nLink Layer Protection: Wireless Networks\nNetwork Layer Protection: IPsec\nTransport Layer Protection: TLS\nApplication Layer Security\n\nSSH\nVPN\nsecure email\nApart from these contents, basic contents on encryption and authentication are also offered to allow students without knowledge of cryptographic subjects to follow the subject.\n\nFinally, in the activities of this subject, different tools are used to reinforce the theoretical knowledge acquired in a practical way. Some of these tools are:\n\nnmap\nwireshark\niptables\nopenssl\nSSH\nsnort\nnessus", "<h2>UOC_Spain 05.576</h2><h2>title</h2>Computer networks design<h2>summary</h2>Today, large networks are a fundamental part of our environment, mainly thanks to the Internet phenomenon and the proliferation of broadband. From email or instant messaging to web services, networks are one more aspect of our lives, always present invisibly, but now unavoidable. For this reason, new specialists are needed every day to support companies that want to get the most out of their networks and use remote interconnection technologies to make the distance that separates them disappear completely. This need has also created a set of professional certifications attesting to their expertise.\n\nThe \"Design of Computer Networks\" (DRC) course uses the basics of network design as a narrative thread to train students in two important aspects of network deployment in multi-branch organizations. On the one hand, the creation of redundant and scalable local area networks (LAN), and on the other hand, the basic mechanisms to achieve connectivity through different WAN technologies (Wide Area Network, Wide Area Networks).\n\nIts main particularity compared to other degree subjects is that its content is fully aligned with part of the latest version of the official Cisco syllabus for obtaining the CCNA (Cisco Certified Network Associate) professional certification, in Spanish. This is one of the most recognized in the world of professional networks and serves as an entry point for a number of specializations in the field (design, security, etc.).\n\nSpecifically, within the entire agenda of this latest version of the CCNA agenda, called \"CCNA Routing & Switching\", the first module corresponds to a small part of the \"Scaling Networks\" curriculum and the rest with practically all of \"Connecting networks\u201d. \".<h2>content</h2>Due to the characteristics of the subject, the materials that will be used throughout the DXC course are the official ones for the CCNA certification, provided within the official Cisco Systems training program, called \"Networking Academy\".\n\nThe course agenda within the subject is divided into four thematic blocks, each associated with an evaluable activity, which encompass the different chapters of the materials. The first two modules correspond to the \"Scaling Networks\" part and the last two to the \"Accessing the WAN\" part.\n\nModule 1. Scalable local area networks\n\n[Optional] LAN Design: Strategies that can be used to systematically design a high-functionality network are studied, such as the hierarchical network design model and proper device selections.\n[Optional] VLAN Escalation: The implementation of inter-VLAN routing using a Layer 3 switch is discussed. Problems encountered when implementing the VTP protocol, DTP protocol, and inter-VLAN routing are also described.\nSTP Protocol: The protocols used to manage redundancy in LANs are covered. In addition, some of the potential problems with such redundancy and their symptoms are covered.\nEtherChannel and HSRP protocol: The EtherChannel link aggregation mechanism is studied and emphasis is placed on the operation and configuration of the HSRP protocol (Hot Standby Router Protocol, hot standby router protocol).\n\nModule 2. Planning routing protocols\n\nDynamic Routing \u2013 Introduces dynamic routing protocols, explores the benefits of using this class of protocols, how different routing protocols are classified, and the metrics that routing protocols use to determine the best path for network traffic.\nEIGRP \u2013 Explains the EIGRP protocol and provides basic configuration commands to enable it on a Cisco IOS router. It also explores how the routing protocol works, and provides more detail on how EIGRP determines the best path.\nEIGRP Protocol Tuning and Troubleshooting: Covers additional EIGRP tuning features and the configuration mode commands to implement them for IPv4 and IPv6.\nSingle-Area OSPF \u2013 Covers the basic implementations and configurations of the OSPF link-state protocol, in its single-area mode of operation.\nMulti-Area OSPF - Instructions are provided for splitting a large single-area OSPF into multiple areas efficiently, how to configure OSPFv2 and OSPFv3, and an overview of the commands used to verify their configuration.\nOSPF Protocol Tuning and Troubleshooting - Describes the tuning functions in OSPF, the configuration mode commands that are used to implement various features for IPv4 and IPv6, and the components and commands that are used to troubleshoot OSPFv2 and OSPFv3.\n\n\nModule 3. WAN connectivity\n\nWAN Concepts \u2013 Introduces WAN standards, technologies, and purposes and covers choosing the appropriate WAN technologies, services, and devices to meet the changing business requirements of a growing business.\nPoint-to-Point Connections \u2013 Covers the terms, technology, and protocols used in serial connections. Point-to-point protocols (PPP) and HDLC are introduced.\nBranch Office Connections: Frequently used broadband solutions such as cable, DSL, and wireless are introduced, as well as PPPoE (PPP over Ethernet) implementation. He also studies how to deploy VPNs (Virtual Private Networks) and the BGP protocol.\n\nModule 4. Advanced aspects of networks\n\nAccess Control Lists \u2013 Explains how to configure and troubleshoot extended IPv4 ACLs and IPv6 ACLs as part of a security solution.\nNetwork Security and Monitoring: Details the most common LAN security threats and how to mitigate the risk. In addition, SNMP is described and how to use it to monitor a network, and how to implement local SPAN to capture and monitor traffic with port analyzers or IPS devices.\nQuality of Service: Network transmission quality, traffic characteristics, queuing algorithms, QoS models, and QoS implementation techniques are described.\nNetwork Evolution - Provides an introduction to emerging trends in today's networks, such as IoT, cloud, or software-defined networks.\nNetwork Troubleshooting \u2013 Lists general network troubleshooting procedures, methods, tools, and documentation that should be retained. Typical symptoms and causes at different layers of the OSI model are also discussed.", "<h2>UOC_Spain 05.577</h2><h2>title</h2>Operating systems design<h2>summary</h2>Once we have seen the functionalities that the Operating System (OS) offers to users, we are in a position to analyze the different techniques and policies that make them possible. This knowledge has to allow us a better use of the operating system as end users, and provides the bases to be able to carry out a correct administration of the Operating System.\n\nThis subject will present what an Operating System is, from an internal point of view. The different possibilities of managing the elements of the OS, both hardware and software, will be seen.\n\nTo achieve these objectives, theoretical and practical concepts are combined. In the practical part, the source code of the Linux operating system will be studied and modified.<h2>content</h2>Module 1. Structural and functional concepts of the operating system\n\nThe didactic materials of this module present the fundamental aspects for you to achieve the following objectives:\n\nKnow the different internal structures that the core of an OS can have and the respective differential characteristics, and know how to differentiate them based on their specialization.\nKnowing how to identify the hardware elements necessary to implement some specific OS services.\nKnow the execution modes of the processes with respect to their privileges, especially the OS kernel mode.\nLearn the reasons why the operating system needs hardware support to control the system. Some reasons have to do with efficiency and others have to do with the nature of control.\nUnderstand the importance of the computer's hardware support when performing certain OS functions and know what types of procedures require this support.\nBeing able to differentiate the execution of normal operations from the execution of privileged instructions, and knowing what type of management of the OS services allow these instructions.\n\nModule 2. Process management\n\nIn the teaching materials provided in this module, you will find the necessary tools to achieve the following objectives:\n\nLearn the concepts of process and thread of execution.\nKnow the different states in which a process can be found and the reasons that cause a change of state.\nUnderstand the need to make context switches to take better advantage of the performance of the computer.\nRelate the number of processes that occur in the machine with the performance that is achieved from them.\nUnderstand the functions of the different levels of processor programming.\nUnderstand processor scheduling algorithms and detect the advantages and disadvantages.\n\nModule 3. Virtual memory\n\nThe didactic materials of this module contain the necessary tools to achieve the following objectives:\n\nExtend the concept of virtual memory that you have learned in other subjects by describing the system hardware and software needs to efficiently implement paged virtual memory management.\nLearn about the different page load management, allocation, and replacement policies and discuss their pros and cons.\nSee how memory management affects the execution of program code.\nLearn the most important aspects of memory allocation in the Linux kernel.\n\nModule 4. Input/output management\n\nIn the didactic materials of this module you will find the necessary tools to achieve the following objectives:\n\nKnow the functions and structure of device drivers, as well as some techniques to manage them.\nAcquire knowledge about the different implementations of the technique of storage in the intermediate memory (buffering) to adapt the speeds of the device and the processor.\nKnow how to differentiate between independent and device-dependent I/O procedures.\nKnow an implementation scheme of I/O procedures.\nKnowing how to apply techniques such as synchronous and asynchronous calls, device management, generic I/O operations, etc.\nKnow the objectives of the layers of the I/O routines of the operating system.\nShow the complexity involved in the design of controllers (device drivers) through a concrete example.\n\nModule 5. The file system\n\nIn this didactic module you will find the necessary materials to achieve the following objectives:\n\nKnow how the information on the disc is structured.\nKnow different alternatives to structure a file system.\nFind out what alternatives there are to organize free disk space.\nLearn about the possibilities to distribute the space allocated to files.\nLearn to identify the data structures needed in memory to perform operations related to the file system.\nKnowing what steps the operating system must take to carry out a certain operation and knowing its motivation.\nBe aware of techniques that allow you to improve the efficiency and reliability of file systems.\nKnow the characteristics of the most common file systems.\n\nModule 6. Concurrency: principles and tools\n\nIn the materials of this module, you will find the necessary tools to achieve the following objectives:\n\nKnow and analyze examples with the different high-level synchronization tools that allow concurrent programming to be carried out with guarantees.\nAnalyze real use cases on concurrent programming in Gnu/Linux.\nAnalyze the problem of deadlock and indefinite wait considering the different situations, evaluating their advantages and disadvantages. Also, consider the different tools at the administrator level to manage these situations and help you make decisions.", "<h2>UOC_Spain 05.578</h2><h2>title</h2>Computers architecture<h2>summary</h2>In this subject, the knowledge of computer architecture introduced in the Fundamentals and Structure of Computers of the Degree in Computer Engineering is deepened.\n\nThe course delves into advanced concepts of computer structure: computer performance and processor pipeline. In addition, an introduction is made to the differentiating elements of multiprocessors, and their different architectures.\n\nThe course has a strong practical component. The first part of the lab (Practice 1) is done using CPU architecture simulators (such as the WINDLX simulator in the Windows environment). The second part of the laboratory (Practice 2) deals with basic parallel programming issues.<h2>content</h2>The course consists of four modules that cover the proposed objectives.\n\nMODULES\n\nShort description\n\nModule 1:\n\ncomputer performance\n\nThe different figures of merit used to evaluate the performance of computers are presented, as well as the problems that their interpretation has. Amdahl's law and its implications are presented.\n\n\nModule 2:\n\nIntroduction to segmentation\n\nThe main technique used today by all microprocessors to reduce program execution times is presented and analyzed. This technique is instruction execution pipeline and is based on taking advantage of instruction-level parallelism by executing more than one machine language instruction per clock cycle, while reducing processor cycle time.\n\n\nModule 3:\n\npipelined processors\n\n \n\nModule 4:\n\nmultiprocessors\n\nThe fourth block studies multiprocessor systems based on scalar microprocessors. Study: multiprocessor systems, memory coherence, interconnection networks for multiprocessors, synchronization models and parallel programming.\n\n\nDetailed content by module and annex:\n\n\nDIDACTIC MODULES\n\nSubscript\n\nModule 1:\n\ncomputer performance\n\n1.1 Need to evaluate Performance.\n\n1.2 Figures of merit.\n\n1.3 Performance Evaluation Programs.\n\n1.4 Amdahl's Law.\n\n\nModule 2:\n\nIntroduction to segmentation\n\n2.1 Improvements in microprocessor performance.\n\n2.2 Parallelism at the instruction level.\n\n2.3 Joint evolution of technology and architecture.\n\nModule 3:\n\npipelined processors\n\n3.1 Segmented processors. Linear segmented processor.\n\n3.2 Example of sequential architecture.\n\n3.3 Linear segmented processor. Calculation instructions and memory access.\n\n3.4 Linear Segmented Processor Data Risk.\n\n3.5 Linear Segmented Processor. Sequence break instructions.\n\n3.6 Reduction of lost cycles due to data risks.\n\n3.7 Reduction of lost cycles due to control risks.\n\n3.8 Cycles lost due to structural risks\n\n3.9 Segmented Architecture with Multicycle Operations.\n\n3.10 Advanced Topics.\n\n\nModule 4:\n\nmultiprocessors\n\n4.1 Multiprocessor systems\n\n4.2 Consistency of memory\n\n4.3 Interconnection networks for multiprocessors\n\n4.4 Synchronization and communication\n\n4.5 Parallel programming models\n\n4.5.1 Shared variables model\n\n4.5.2 Message passing model", "<h2>UOC_Spain 05.579</h2><h2>title</h2>Automata and grammars<h2>summary</h2>A very important part of the information available today is available in textual format: web pages, configuration files, scripts, computer programs or even natural language text. For a computer to be able to use this information, it needs to be able to interpret it according to the rules of the language in which it is written.\n\nIn this subject, basic techniques are presented to describe the structure of a language, regular expressions and context-free grammars. These notations are used, for example, to describe programming languages \u200b\u200bor describe text patterns for searching.\n\nIn addition, the mechanisms used by computers to recognize if a sentence is correctly formed according to the structure of a language are presented. Specifically, finite automata and stacked automata are presented.\n\nIn summary, this subject provides the basic tools to know how to handle textual information with a computer.<h2>content</h2>The subject is structured in three modules:\n\n1. Alphabets, words and languages\n\n1. Basic elements: alphabets, words and languages\n\n2. Operations with words\n\n3. Operations on languages\n\n4. Definition of languages\n\nThis module describes the elements that make up a language and the operations to manipulate them.\n\n2. Finite automata and regular languages\n\n1. Deterministic finite automata and regular languages\n\n2. Indeterministic finite automata\n\n3. Operations with finite automata\n\n4. Minimization of finite automata\n\n5. Regular Expressions\n\n6. The motto of the bomb\n\nThe simplest class of languages, regular languages, is introduced. A formalism is provided to describe these languages \u200b\u200b(regular expressions) and another to recognize the words that are part of them (stack automata).\n\n3. Non-contextual grammars and stack automata\n\n1. Introductory concepts\n\n2. Derivation tree and ambiguity\n\n3. Grammar review\n\n4. Simplification of a grammar\n\n5. Normal forms\n\n6. Automata with battery\n\n7. Properties of decontextualized languages\n\nA class of more complex languages, called context-independent, is introduced. The structure of this language is described by grammars and its words are recognized by stack automata.", "<h2>UOC_Spain 05.580</h2><h2>title</h2>Compilers<h2>summary</h2>Compilers are essential tools for any computer scientist, responsible for translating textual information from one format or language to another. For example, they act as key players in the execution process of a program: they translate the program from the high-level language used by humans into a low-level language that can be executed on a computer (such as assembler or machine code).\n\nThis course introduces the basic structure of a compiler: the modules that make it up and how they communicate with each other. We will focus on the case of general purpose programming languages \u200b\u200band on the process of generating an executable from a high level program.\n\nSpecifically, we will see how a source program is analyzed to obtain its components and possible errors introduced by the programmer are detected. The concept of interpreter and its relationship with compilers will also be introduced. Subsequently, it will be studied how the object code is generated and optimized from the data obtained in the analysis part to improve performance. All of this will be implemented by using compiler build tools.<h2>content</h2>The subject is structured in six modules:\n\n1. General Information\n\n1. Languages\n\n2. Basic notions\n\n3. Structure of a compiler\n\n4. Building compilers\n\nYou will see an overview of the general structure of a compiler.\n\n2. Lexical analysis\n\n1. General organization\n\n2. Construction of lexical analyzers\n\n3. Specification of a lexical analyzer\n\n4. Error handling\n\n5. The entry system\n\n6. The symbol tables\n\nThe only part of the compiler that interacts with the source file will be studied, converting its characters into a sequence of lexical symbols (tokens) and eliminating everything that is not necessary for its analysis (comments, line breaks...).\n\n3. Analysis\n\n1. General notions\n\n2. Top-down analysis\n\n3. Bottom-up analysis\n\nThe phase in charge of verifying that the lexical symbols of the source program arrive in the correct order and that the specifications of the context-free grammar that defines the source language are met will be studied.\n\n4. Semantic analysis\n\n1. Semantic analysis\n\n2. Intermediate code generation\n\nThe verification of the semantics of the source program, which depends on the context, will be studied, incorporating semantic attributes and actions in the productions of the grammar.\n\n5. Synthesis phases\n\n1. Code generation\n\n2. Code optimization\n\nThe generation of code from the intermediate code will be studied, as well as everything to take into account to carry out an automatic translation and the final optimization phase.\n\n6. Interpreted languages\n\n1. Interpreters\n\n2. The abstract stack machine\n\n3. Construction of an interpreter\n\nA concrete model of architecture for interpreters based on a memory in the form of a stack will be presented. The construction process of an interpreter based on this model will be studied.", "<h2>UOC_Spain 05.581</h2><h2>title</h2>Knowledge representation<h2>summary</h2>Intelligent systems need to use information in their decision making process. Not only the ability to store and query information is required, functionalities that can be achieved through databases or in-memory data structures. In addition to this, it is necessary to be able to relate the information and use it as a base from which to infer new knowledge.\n\nThis course presents the most common representation schemes to represent knowledge in intelligent systems: ontologies, semantic networks, logical representations, frameworks, etc. It also presents fields of application where these schemes are used, such as the field of the semantic web.<h2>content</h2>The units of this subject are the following:\n\nUnit 1: Introduction to knowledge representation\n\nSection 1: Knowledge\nSection 2: Systems of representation\nUnit 2: Ontologies and semantic web\n\nSection 1: The relationship with the web\nSection 2: The Semantic Web\nSection 3: Ontologies and the web\nSection 4: Formats\nSection 5: Tools\nSection 6: Resources", "<h2>UOC_Spain 05.583</h2><h2>title</h2>Machine learning<h2>summary</h2>The main motivation of this course is to make machine learning known and how it is situated within Artificial Intelligence as a discipline and to understand what agents and multi-agent systems are.\n\nIn Artificial Intelligence an overview of Artificial Intelligence was given and some of the so-called classical methods and techniques were presented, such as problem solving, search and knowledge-based systems, approximate reasoning techniques were also seen more advanced. .\n\nIn this course, you will go much deeper into the problem of machine learning (machine learning), covering the topics of unsupervised (clustering) and supervised (classification) learning. In particular, emphasis will be placed on the most advanced algorithms, such as support vector machines, classifier sets or neural networks.<h2>content</h2>Didactic module 1. Learning\n\n1. Introduction\n1.1. Genetic algorithms for the adjustment of fuzzy systems\n1.2. A classification of learning techniques.\n1.3. bias and variance\n\n2.- Feature extraction\n2.1. Training sets and featured spaces.\n2.2. Taxonomy of feature extraction algorithms\n23. Feature Selection\n2.4. Feature Extraction\n2.4.1. Principal component analysis\n2.4.2. Linear Discriminant Analysis (ADL)\n\n3. Unsupervised learning\n3.1. Categorization algorithms: introduction\n3.2. Partitioning and fuzzy partitioning of objects\n3.3. Object hierarchies\n\n4. Supervised learning\n4.1. Methods based on categorization methods\n4.2. support vector machines\n4.3. Logical descriptions of concepts.\n4.4. decision trees\n4.5. Combination of methods\n4.6. neural networks\n\n5. Knowledge representation and learning\n5.1. inductive logic programming\n\nDidactic module 2. Agents and multi-agent systems\n\n1. Intelligent agents\n1.1. characteristics of an agent\n1.2. Deliberative agents versus reactive agents\n1.3. Agent Types\n\n2. Multi-agent systems\n2.1. Advantages of multi-agent systems\n2.2. Communication techniques\n23. Foundation for Intelligent Physical Agents\n2.4. ontologies\n2.5. Cooperation between agents", "<h2>UOC_Spain 05.584</h2><h2>title</h2>Data mining<h2>summary</h2>Data is the new oil. Therefore, Data Mining is a subject to apply the previous knowledge acquired to Statistics and Databases and present some new ones more specific to the field of knowledge extraction. A set of methods from Artificial Intelligence are presented, which form the essential core of the discipline known as Data Mining. The basic concepts of the mentioned subjects are very useful in this matter and will allow a better evaluation of some of the techniques that will be studied.<h2>content</h2>The didactic material of the subject is divided into six modules and a prologue that present a notable interrelationship between them. The sixth is a case study that can be used to see how the methods explained in the other modules are applied in a concrete and real case.\n\nBelow you can see the modules that have to be worked on to achieve the objectives of the course.\n\nModule 1: The Data Mining process.\n\nDiscovery of knowledge from data.\nThe phases of the knowledge extraction process.\nData mining tools.\n\nModule 2: Data preprocessing and feature management.\n\nTransformation of values.\nDimensionality reduction.\nmissing values.\nFeature display.\nSelection of characteristics.\nFeature engineering.\n\nModule 3: Unsupervised models\n\nPre-eliminate concepts.\nGrouping and segmentation.\nDensity-based models.\naffinity propagation.\n\nModule 4: Supervised models\n\nProximity-based models.\nDecision trees.\nRegression models.\n\nModule 5: Evaluation of models.\n\nEvaluation of supervised classification models.\nEvaluation of supervised regression models.\nEvaluation of unsupervised models.\n\nModule 6: Case Study.\n\nPresentation of the case\nStep 1: Establish an analytical objective\nStep 2: Verify the data\nStep 3: data preprocessing\nStep 4: exploratory analysis\nStep 5: Classification\nStep 6: Reproducibility", "<h2>UOC_Spain 05.586</h2><h2>title</h2>Analysis and design with patterns<h2>summary</h2>This course is focused on the study of analysis and design patterns contemplated from a practical perspective. The contents are located within the object-oriented methodology, the most currently accepted, and using the UML notation for the same reason.\n\nPatterns (analysis, design, architecture...) are one of the innovations that have had the greatest impact in object-oriented development in recent years, along with the appearance of the UML language. Their main advantage is that they save time and improve quality by applying solutions (which we call patterns) that have already been widely tested by other designers.\n\nFor this reason, the use of patterns is considered a basic skill that object-oriented software designers must acquire today. Now, it does not seem that this ability can be acquired in any other way than through practice; In this practice, the detailed information found in books -which are already beginning to be numerous- about patterns is usually used, and this way of working is the one that is recommended to students for their future professional work.\n\nThis course provides summary descriptions of many of the most popular and currently accepted patterns, as well as some general concepts about patterns and their usage.<h2>content</h2>The didactic material of the course consists of three didactic modules:\n\nLearning Module 1: Introduction to Patterns\n\nIn this module, notions of UML are given with practical examples of the different modeling techniques. Includes an analysis example and a design example.\n\nDidactic module 2: Catalog of patterns\n\nThe most significant patterns are discussed and a description of patterns covering practically the entire software life cycle is provided.\n\nLearning Module 3: Pattern Development Case Study\n\nIt includes the detailed development of a case study similar to the practice proposed to the students.\n\nThe materials of this subject are not designed to be studied in a linear way, but once the introduction (Module 1) has been read, it is recommended to combine the study of theory (Module 2) with practice (Module 3). In the description of each activity, you will find a detailed description of which specific sections of each module must be studied in order to carry out the activity.", "<h2>UOC_Spain 05.587</h2><h2>title</h2>Software engineering of components and distributed systems<h2>summary</h2>Ongoing advances in computing and telecommunications are changing the way software is developed. In particular, the relentless increase in the power of personal computers and mobile devices, the lowering of hardware costs, and the appearance of global coverage data networks have made possible an infrastructure that is especially conducive to the use of open and distributed systems. \n\nThese changes have caused, among other things, that the traditional methods of software design and development (seen in the subjects of Engineering and Software Analysis and design with patterns) are insufficient, since, more or less implicitly, they assume that The application to be developed will be executed in a basically centralized environment. Therefore, traditional methods are unable to naturally manage the complexity of the requirements of this new type of systems. On the other hand, the aspects closest to the analysis and specification of requirements studied in the Requirements Engineering subject do not change with respect to what was seen in previous courses and, therefore, are not repeated here.\n\nThis subject serves as an introduction to software architectures as a framework for the design and development of distributed applications where the fundamentals, techniques and skills applicable to the modern definition of software architectures are studied and put into practice and knowledge is complemented. acquired in previous courses. The design of the architecture of software systems makes it possible to describe in an abstract and high-level way both the functionality of the system and many other non-functional aspects of it (distribution, reliability, security, adaptability, benefits, etc.). This system description is often defined by an architectural style, a classification of software systems into large families that follow a common structural pattern. Among the most common architectural styles for distributed systems are systems organized into microservices, multiple layers, client-server systems, or peer-to-peer systems.\n\nApplication design in terms of software microservices must be further refined to accommodate and implement it on a particular distributed software technology. These architectures can be implemented using any programming paradigm (object-oriented, structured...). In our specific case, the reference language will be Java, which allows the development of distributed applications with microservices architectures. These microservices are the ones that will be used to implement and test the architectural elements described in the system architecture.\n\nFinally, some good practices in the development and production of software in distributed architectures are collected. Some of the key concepts are worked on when developing and putting into production, such as continuous delivery, DevOps culture, and deployment with containers.\n<h2>content</h2>The subject is structured into 5 main activities, each one with its specific contents:\n\n \n\nActivity 1: \"Distributed software architectures: a solution for every problem\"\n\n \n\nBook \"Fundamentals of Software Architecture\" (Richards & Ford): Chapter 1. Introduction.\nBook \"Fundamentals of Software Architecture\" (Richards & Ford): Part I Foundations (Chapters 2 - 8)\nBook \"Fundamentals of Software Architecture\" (Richards & Ford): Part II Architecture Styles (Chapters 9 - 18).\n \n\nActivity 2: \"Hexagonal architectures and microservices design: a well-matched relationship\"\n\n \n\nBook \"Microservices patterns\" (Richardson): Chapter 1. Section 6: \"The Microservice architecture pattern language\".\nBook \"Microservices patterns\" (Richardson): Chapter 2: \"Decomposition strategies\".\nBook \"Microservices patterns\" (Richardson): Chapter 3: \"Interprocess communication in a microservice architecture\"\nBook \"Microservices patterns\" (Richardson): Chapter 5: \"Designing business logic in a microservice architecture\".\n \n\nActivity 3: \"From creation to interconnection of microservices\"\n\n \n\nBook \"Microservices Patterns\" (Chris Richardson): Chapter 6: \"Developing business logic with event sourcing\". Introduction.\nBook \"Microservices Patterns\" (Chris Richardson): Chapter 6: \"Developing business logic with event sourcing\".\nBook \"Microservices patterns\" (Richardson): Chapter 7: \"Implementing queries in a microservice architecture\"\nBook \"Microservices patterns\" (Richardson): Chapter 8: \"External API patterns\".\n\nActivity 4: \"Quality of distributed software: inherent, transversal and critical\"\n\n \n\nBook \"Microservice Patterns\" (Chris Richardson): Chapter 9. \"Testing Microservices: Part 1\". Introduction.\nBook \"Microservice Patterns\" (Chris Richardson): Chapter 9. \"Testing Microservices: Part 1\".\nBook \"Microservice Patterns\" (Chris Richardson): Chapter 10. \"Testing Microservices: Part 2\".\nBook \"Software Architecture Fundamentals\" (Richards & Ford): Part I Fundamentals (Chapters 3 and 6).\n \n\nActivity 5: \"DevOps, CD/CI and agile culture: good practices for distributed software development\"\n\n \n\nBook Microservice Patterns (Chris Richardson) Chapter 12 Implementation of microservices. Introduction.\nBook Microservice Patterns (Chris Richardson) Chapter 12 Implementation of microservices.\nBook \"Continuous Delivery: Reliable Software Releases Through Automated Build, Test, and Deployment (Jez Humble and Dave Farley) Part I: Chapters 1-10.\nBook \"The DevOps Handbook\" (Patrick Debois, John Willis, Jez Humble & Gene Kim): Chapters 1 - 4.", "<h2>UOC_Spain 05.588</h2><h2>title</h2>Software developement project<h2>summary</h2>The Software Development Project course has as its main objective the development of a specific software project and is based on the practical application of the knowledge and skills obtained so far in the Degree, such as Project Management, Fundamentals of Programming, Engineering of Software, Use of Databases, and specifically the technical skills that were obtained within Software Engineering of Components and Distributed Systems.\n\nDespite the fact that the subject is based on carrying out a specific software project, the subject also covers both new theoretical aspects and others that complement the knowledge acquired up to now, such as agile software development methodologies.\n\nThe effective development of the project will be achieved through a specific agile methodology (Scrum) that iteratively covers in the form of sprints all the stages of the software life cycle, that is, the specification, design, implementation, testing, deployment and delivery of the project. product to the \"supposed\" customer. In particular, in the implementation stage, Java will be used to develop the distributed software based on a microserver architecture. In addition, other technologies will support the project, such as configuration, design, testing, continuous delivery, and containerized deployment tools. All these technologies have been seen and practiced in the previous subject of Software Engineering of Distributed Components and Systems and therefore it is assumed that the students know them.\n\nFinally, the complexity of the project will require the specific development of skills related to collaborative work in small groups of students. The UOC will offer students a collaborative space where they can carry out communication between group members, share documentation and, in general, manage the project, with the support and supervision of the subject advisors.<h2>content</h2>Activity 1: \"Agile product development and conceptualization methodologies\"\n\nBook \"Essential Scrum: A practical guide to the most popular agile process by Kenneth S. Rubin. Chapter 1. Introduction.\nBook \"Essential Scrum: A Practical Guide to the Most Popular Agile Process\" by Kenneth S. Rubin. Chapters 2-13.\nBook \"The agile samurai\" by Jonathan Rasmusson. Chapters 3-5.\nBook \"The agile samurai\" by Jonathan Rasmusson. Chapters 1-2, 6 and 15.\nBook \"Agile Estimating and Planning\" by Mike Cohn (supplementary material).\nBook \"Scrum - a pocket guide (3rd ed.)\" by Gunther Verheyen (supplementary material).\nActivity: First Continuous Assessment Test (PEC1).\nActivity 2: \"Product Planning\"\n\nBook \"Essential Scrum: A Practical Guide to the Most Popular Agile Process\" by Kenneth S. Rubin. Chapters 15-16.\nBook \"Essential Scrum: A Practical Guide to the Most Popular Agile Process by Kenneth S. Rubin. Chapters 19-23.\nArticle \"The new user story backlog is a map\" by Jeff Patton. https://www.jpattonassociates.com/the-new-backlog/\nBook \"User Stories Applied: For Agile Software Development\" by Kent Beck (supplementary material).\nBook \"User Story Mapping\" by Jeff Patton (supplementary material).\nBook \"Essential Scrum: A Practical Guide to the Most Popular Agile Process\" by Kenneth S. Rubin. Chapters 17 Envisioning (Product Planning) (Supplementary Material).\nBook \"Clean Code: A Handbook of Agile Software Craftsmanship\" by Robert Martin (supplementary material).\nBook \"Refactoring: Improving the Design of Existing Code\" by Martin Fowler (Supplementary Material)\nActivity: First part of the Practice (PRAC1).", "<h2>UOC_Spain 05.591</h2><h2>title</h2>Computer networks structure<h2>summary</h2>Today, large networks are a fundamental part of our environment, mainly thanks to the Internet phenomenon and the proliferation of broadband. From email or instant messaging to web services, networks are one more aspect of our lives, always present invisibly, but now unavoidable. For this reason, new specialists are needed every day to support companies that want to get the most out of their networks and use remote interconnection technologies to make the distance that separates them disappear completely. This need has also created a set of professional certifications attesting to their expertise.\n\nThe course \"Computer Network Structure\" (ERC) focuses on learning the fundamentals of the lowest level communication protocols that allow different types of devices to communicate: Transport, Internet and Network Access. Within this, special prominence is given to the operation of Ethernet local area networks (LAN) and the creation of IP addressing schemes.\n\nIts main particularity compared to other degree subjects is that its content is fully aligned with part of the latest version of the official Cisco syllabus for obtaining the CCNA (Cisco Certified Network Associate) professional certification, in Spanish. This is one of the most recognized in the professional world of networks and serves as an entry point for a whole set of specializations in the field (design, security, etc.).\n\nSpecifically, within the entire agenda of this latest version of the CCNA agenda, this course encompasses practically the entire first part of the course, called \"Introduction to Networks\" (ITN), and a part of the second, called \"Switching , Routing and Wireless Fundamentals\" (SRWE).<h2>content</h2>Due to the characteristics of the subject, the materials that will be used throughout the ERC course are the official ones for the CCNA certification, provided within the official Cisco Systems training program, called \"Networking Academy\". These materials are supplemented by the book \"Computer Networks: A Top-Down Approach,\" which is not part of the curriculum for this certification.\n\nThe course syllabus within the subject is divided into four thematic blocks, or modules, which include the different chapters of the materials from the parts \"Introduction to Networks\", \"Essential Switching, Routing and Wireless\", and some sections of the book .\n\nModule 1. How do networks work?\n\n(2 weeks)\n\nIntroduction to Modern Networks - Introduces the concept of a data network, providing a very general overview of the foundation for exploring the services, technologies, and issues that network professionals face when designing, developing, and maintaining data networking. modern network.\nBasic configuration of switches and network devices: Serves as an introduction to the Cisco IOS operating system. The command line structure and basic commands are shown.\nProtocols and network models: The concept of protocol and the importance of standardization processes are presented. For this, the TCP/IP and OSI communication models are explained.\nThe Physical Layer: Explains how the physical layer protocols enable communications on data networks.\n\nModule 2. Ethernet networks\n\n(4 weeks)\n\nThe network access layer: the functions of the data link layer and the protocols associated with it are studied.\nSwitching Concepts - Explains how Layer 2 switches transmit information.\nEthernet Switching: Describes the characteristics and operation of the Ethernet network in terms of its evolution from contention-based data communication shared media technology to today's high-bandwidth full-duplex technology.\nVLANs: This part focuses on knowing what a virtual private network (VLAN) is and how it works, as well as its implementation.\nWLAN Concepts and Configuration - Explains how wireless WLANs enable network connection, as well as configuration, basic security, and troubleshooting.\n\nModule 3. The Internet Protocol\n\n(3 weeks)\n\nThe Network Layer \u2013 Discusses the role of the network layer and how it divides networks into groups of equipment to manage the flow of data packets within a network. It also examines the way in which communication between networks, routing, is facilitated.\nResolution of IP addresses: Protocols such as ARP and \"Network Discovery\" that allow communication on a network are explained.\nBasic configuration of routers: The initial implementation of parameters in a router (router) and network devices is explained.\nIPv4 and IPv6 Addressing: The creation and assignment of IPv4 and IPv6 network and subnet addresses are explained in detail through the efficient use of segmentation.\nICMP \u2013 Explains the use of various tools to verify network connectivity.\n\nModule 4. Routing in the Internet and the Transport layer\n\n(3 weeks)\n\nRouting Concepts \u2013 This part is covered in conjunction with the book and focuses on seeing what algorithms and protocols exist to dynamically create routing tables for a router.\nStatic Routing: Configuration of IPv4 and IPv6 static routes.\nThe Transport Layer: The role of the transport layer in encapsulating application data using the network layer is examined. The transport layer also includes error control functions and allows the use of different services on the same computer.", "<h2>UOC_Spain 05.592</h2><h2>title</h2>Advanced computers architecture<h2>summary</h2>In this subject, knowledge of the advanced architectures of current computers is deepened. On the one hand, previous knowledge in Fundamentals and Structure of Computers and Computer Architecture will be expanded. On the other hand, different models of current processor architectures will be presented. Among them, high performance architectures, multicores or GPU architectures will be studied.\n\nHowever, not only the purely architectural aspects of these systems will be discussed, but the different programming paradigms associated with these architectures will also be presented.<h2>content</h2>The subject is made up of five modules that cover the objectives and competences previously exposed:\n\n \n\nModule 1: Introduction to parallel architectures.\n\nModule 2: Multiprocessors vs Multicomputers\n\nModule 3: Multi-Thread Architectures (Multi-core)\n\nModule 4: Performance in multithreaded architectures\n\nModule 5: Computer Graphics (GPU)-Based Architectures", "<h2>UOC_Spain 05.593</h2><h2>title</h2>Requirements engineering<h2>summary</h2>Requirements engineering is the discipline that helps us to identify, manage and maintain the set of software requirements that we want to develop. Requirements engineering takes place in the same context as software engineering (software development), so it can be seen as part of software engineering. Even so, it must be taken into account that requirements engineering requires knowledge and skills from other disciplines such as psychology, marketing or design.\n\nThe purpose of this course is for future software engineers to deepen their study of the problems, techniques, and tools related to obtaining, managing, documenting, and validating/verifying the requirements of a software system. When presenting the contents of this course, we have set ourselves two main objectives:\n\n1) The discipline of requirements engineering is presented from a practical point of view, giving great importance to the techniques and tools that students will be able to apply in their professional lives.\n2) The broadest possible vision of requirements engineering is also given, looking at aspects as diverse as product management or the implementation of automated acceptance tests.\n\nThis subject assumes that the student has basic notions of requirements engineering (in the case of UOC students, it will be assumed that they have taken the Software Engineering subject). Therefore, this course deepens and extends some concepts that have already been studied before, at the same time that it introduces new techniques and tools of requirements engineering.<h2>content</h2>The didactic material of the subject consists of five didactic modules:\n\nModule 1: Introduction to Requirements Engineering\n\nIt introduces requirements engineering and presents the practical case that will be developed throughout the rest of the modules.\n\nIntroduction to requirements engineering.\nPresentation of the practical case\nTypes of requirements\nThe requirements engineering process.\nUse Case Requirements\n\nModule 2: Obtaining requirements\n\nIt reviews the basic requirements elicitation techniques and introduces new techniques.\n\nRequirements elicitation techniques\nrequirements discovery\nlegacy solutions\nObjectives and requirements\ncase study\n\nModule 3: Requirements Management\n\nDescribes new techniques for requirements management, especially from the point of view of managing software as a product.\n\nFactors to consider for requirements management\nRequirements estimation\nPrioritization and selection of requirements\nManagement of changes in requirements.\ncase study\n\nModule 4: Documentation of requirements\n\nIt shows various styles of requirements documentation and how the different styles have advantages and disadvantages that make them ideal for different situations.\n\nRequirements Documentation - Overview\nRequirements Documentation Styles\nDocumentation of requirements through use cases\nDocumentation of the conceptual model using UML and OCL\ncase study\n\nModule 5: Validation and verification of requirements\n\nDescribes the process for validating and verifying the correctness of the selected requirements. First, it describes how to verify that the requirements you choose are correct (validation), and then how you can ensure that the software you develop meets these requirements (verification).\n\nRequirements validation\nRequirements verification\nTest Driven Development\ncase study", "<h2>UOC_Spain 05.594</h2><h2>title</h2>Embedded systems<h2>summary</h2>Embedded systems are increasingly present in our lives. From network devices to industrial control systems, a wide range of devices make up what we know as an Embedded System. In this topic we want to give an overview of these systems. We will start from its definition and delve into its fields of application. The knowledge of the hardware components that constitute these systems will be deepened, we will know their programming models and the particularities that condition the development of applications for embedded systems.\n\nThe main objective of the course is for the student to learn the basic programming techniques of an embedded system, have a basic knowledge of the hardware architecture that composes them and acquire skills to work with this type of device.<h2>content</h2>Module 1- Introduction to embedded systems\nIn this module an introduction to embedded systems is made, the concept and its applications are presented and emphasis is placed on the development process of an embedded system.\n\nModule 2 - The hardware of an embedded system\nThis module introduces the hardware architecture of an embedded system. The components that compose it are presented and their particularities are described. The objective of the module is that the student has an overview of the main hardware components that make up an embedded system.\n\nModule 3 - The software and programming models of an embedded system\nThis module presents the most relevant programming models for the development of applications for embedded systems. Unlike what has been learned in other software development subjects, it will be seen that the efficiency and memory reduction used by the program is rewarded over its structuring and/or modularity.\n\nModule 4- Operating systems for embedded systems\nThis module takes a hands-on approach to introduce the need for abstractions when operating with embedded systems. From the simplest approaches to real-time operating systems, the different ways to manage the resources of an embedded system are presented. Also in this module the peripheral controllers are worked on and their programming is deepened.\n\nModule 5- Validation and evaluation tools for embedded systems.\nThis module introduces the tools available for an application developer to carry out their work and verify the developed software.", "<h2>UOC_Spain 05.595</h2><h2>title</h2>Enterpreneurship<h2>summary</h2>New business opportunities appear every day to respond to previously non-existent or unsatisfied needs or to improve the existing offer. In addition, organizations increasingly value having an entrepreneurial organizational culture and encourage people who work to act as entrepreneurs in the same organization. And it has been shown that there is a positive relationship between entrepreneurship and the development of a country or region. Among other characteristics, it contributes to economic growth, is a source of innovation, favors job creation and contributes to social cohesion and dynamism.\n\nIn this sense, the Entrepreneurial Initiative subject aims to promote the entrepreneurial spirit of students from the introduction to the main elements that make up the entrepreneurial process from an applied and practical approach. Firstly, we will introduce ourselves to the entrepreneurial phenomenon, analyzing various typologies and taking into account the gender perspective. Next, we will immerse ourselves in the ideation, validation, modeling and presentation of a viable and sustainable entrepreneurial project (following the sustainable development objectives) developing our capacities for initiative, innovation and teamwork.<h2>content</h2>1. Entrepreneurship and business\n\n1.1. Key concepts\n\n1.2 Entrepreneurial person and founding teams\n\n1.3 Gender and entrepreneurship\n\n1.4 Entrepreneurship in other cultures\n\n1.5 Learning to undertake\n\n1.6 Innovate and undertake. Focus method.\n\n2. The inspiring problem\n\n2.1 Trends, sectors and technologies\n\n2.2 Knowing the field that motivates us\n\n2.3 Inspiring problem\n\n2.4 Validation. interview problem\n\n3. The innovative solution\n\n3.1 Ideation. Lateral thinking and creativity.\n\n3.2 Minimum viable and prototyped product\n\n3.3 Validation. Solution Interview\n\n4. The business model\n\n4.1 The SCOPE business model\n\n4.2 Applications of the business model\n\n4.3 Other tools to work on the business model\n\n5. Numerical aspects of the entrepreneurial project\n\n5.1 Marketing and sales. demand estimate\n\n5.2 Traction. Analytics and indicators to undertake\n\n5.3 Economic and financial aspects\n\n5.4 Economic-financial plan. Agility and feasibility\n\n5.5 Financing of the initiative\n\n6. Project communication\n\n6.1 Purpose of communication\n\n6.2 Target audience\n\n6.3 Effective Presentations", "<h2>UOC_Spain 05.596</h2><h2>title</h2>Foundations of information systems<h2>summary</h2>The continuous innovations in information and communication technologies are transforming the corporate business world into new models, new processes and new business needs. This environment has favored the investments of the companies to be more competitive in the current market, allocating a budget to the acquisition, implementation or updating of information systems.\n\nIn this topic we present the basic concepts of information systems, the types of information systems, the relevance of information systems for companies, what the first information systems were like, how they have evolved and what the systems of the system have to contribute. future. In companies\n\nWe will know the main information system: Enterprise Resource Planning, today also known as basic or traditional.\n\nWe will see how the incorporation of new functionalities in the evolution of ERP systems gives rise to new collaborative information systems: Customer Relationship Management (CRM), Supplier Chain Management (SCM) or Business Intelligence (BI).\n\nAnd a transversal theme to any company information system, its implementation. We will cover the life cycle of an implementation project, the characteristics of its different phases, the problems and what guidelines to follow to obtain a successful implementation.<h2>content</h2>The concept of information system is gradually introduced in the different didactic modules: beginning with its definition, presenting the different types of information systems that exist, showing the most important information systems for companies, and ending with a module on how to these systems are implemented. in companies it is managed.\n\nThe content of the subject is divided into the following didactic modules:\n\nModule 0. Introduction to information systems in organizations\n\nthe information system\nInformation system management\nThe typologies of information systems.\nThe implementation of the information system\ninformation security\n\nModule 1. Business Information System\n\nBusiness information system concept\nHistorical evolution of the ERP system\nERP system architecture\nfunctional modules\nERP system life cycle\nERP system providers\n\nModule 2. Business Cooperation Systems\n\nEnterprise Project Management (EPM)\nSupply Chain Management (SCM)\nCustomer relationship management (CRM)\nElectronic commerce (e-business)\nBusiness Intelligence (BI)\nKnowledge Management (KM)\ndocument management\n\nModule 3. Implementation of Business Information Systems\n\nCharacteristics of business information systems.\nDeployment Lifecycle Phases\nPhase 1. Adoption of the system: The decision to acquire an ERP\nPhase 2. Selection of the standard solution\nPhase 3. Implementation of the solution\nPhase 4. Commissioning\nChange management\nProject management\n\nModule 4. Practical Case: Rural Tourism (Example)\n\nPresentation of the practical case\nGeneral solution approach\nProposed solution", "<h2>UOC_Spain 05.597</h2><h2>title</h2>Information systems integration<h2>summary</h2>The contents of the subject \"Information Systems Integration\" (ISI) revolve around the various meanings of the word \"integration\" in relation to organizations of all kinds, and the information systems they use. Thus, to begin with, we will see the type of problems that usually arise in organizations with little structural integration, as well as the proposals that contribute to a better business integration, mainly the definition and implementation of business processes, transversal to the classic functional ones. areas\n\nSubsequently, it will be seen how organizations have been developing and implementing new information systems as a fundamental tool for their structural and informational integration, and as a means for their progress in terms of their functional management and strategic direction, in short, for their progress. in terms of quality and competitiveness.\n\nIn this line, the different integrating roles that companies pursue through the main types of business information systems implemented in recent years, from ERP systems to BI systems, through CRM and SCM systems, through for EAI projects. Finally, some of the concepts related to the implementation of information systems in organizations will be introduced from a very practical point of view.<h2>content</h2>The purpose of the didactic material is to complement the theoretical knowledge of the modules studied with practical activities that allow the student to acquire basic theoretical and practical knowledge. With this, it is intended that, once the subject is finished, the acquired competences allow the student to apply the knowledge and methodologies to other circumstances and needs, both in the educational context and in professional life.\n\nThe concepts around Business Integration through Information Systems are introduced progressively and gradually throughout the different didactic modules of the subject. From a thematic point of view, the subject is broken down into 4 main didactic modules:\n\n1. Motivations and Fundamentals of Business Integration.\n\n 2. Vertical Integration through Information Systems.\n\n 3. Horizontal Integration through Information Systems.\n\n 4. Implementation of Information Systems in the company.", "<h2>UOC_Spain 05.598</h2><h2>title</h2>Use of information systems in organizations<h2>summary</h2>The subject Use of Information Systems in Organizations (USIO) has a deductive approach; that is, through the study and work of cases, the impact of Information and Communication Technologies (ICT) in organizations is analyzed. This approach allows establishing conclusions and interpretations whose purpose is to understand the efficient use of ICT in management and business decision making.\n\nThe course is based on solving a case throughout the semester by working in interdisciplinary groups. The students of the Degrees in Computer Engineering (GII) and Business Administration and Management (ADE) will share a work space in which they will develop the activities of the subject. This point is very important and the student should consider it before enrolling. Unlike other subjects where there is detailed material to work on for further assessment, the USIO does not have material that the student must study in the classical sense. A group must be formed and work must be done on the approach of a case with contents of business information systems. The development must be collaborative and although some recommended readings are given, searches on the Internet or other sources must also be carried out, proposing a coherent and argued solution. It is not possible to think that there is \"the solution\" in the style of a mathematical exercise, there are several possible ones and the consultant will evaluate the different alternatives with pre-established criteria (indicated as part of the statement). Group work dynamics are usually complex and in this sense it is very important to form a cohesive group that is willing to work from the beginning.<h2>content</h2>Case title: \"PARROT\"\n\nAffair:\n\nThe subject Use of Information Systems in Organizations (USIO) is based on the development of a case study. We will focus on the case of LORO. It is intended to be a first approximation to the resolution of technological innovations to which companies must tend so as not to disappear in the future. The question that management teams in any organization must ask themselves is whether current products and services will continue to be marketed in the future. In the case of PARROT, a drone manufacturer, the help of a consultant is being considered to carry out a detailed study in five phases to take advantage of the disruptive technologies that are appearing in the current digital revolution.\n\n\nThe topics to be studied in this case are the following:\n\nEmerging technologies according to the Gartner Hype Cycle.\nDigital Twins technology (Digital Twins) applied to an organization.\nThe application of Conversational Intelligence technology to the manufacturing sector and its ethical concerns.\nImproving an organization's processes through hyperautomation and process mining\nMetaverse technology applied to a manufacturing organization.\nThe students will be organized in groups to propose a detailed study to PARROT as a consultant. The case has been structured into five PECs corresponding to the five phases that the study will carry out to allow PARROT to take advantage of disruptive technologies; the first will be developed individually and the rest will be done in groups.\n\nSummary of Goals by Milestones:\n\n- PEC 1.- Reading, understanding the case. Gartner Hype Cycle analysis to detect emerging technologies to apply.\n\nUnderstand the case and analyze the technologies included in the Gartner Hype Cycle titled \"Hype Cycle for Mobile Robots and Drones, 2022\" published on July 19, 2022 by Dwight Klappich, to consider which 2 emerging technologies (since Innovation Trigger or Peak of Inflated Expectations ) could use Parrot, which could offer them the creation of new business models or economic growth\n\n- PEC 2.- Analysis of the application of Digital Twins Technology (Digital Twins) in an organization.\n\nExplore how PARROT could take advantage of the Digital Twins technology trend.\n\n- PEC 3.- Analysis of the application of Conversational Intelligence Technology in an organization.\n\nAnalyze what possibilities of applying Conversational Intelligence such as ChatGPT to the manufacturing sector. And discuss what are the ethical concerns of using conversational intelligence like ChatGPT.\n\n- PEC 4.- Analysis of the application of Hyperautomation and Process Mining in an organization.\n\nAnalyze how PARROT could carry out different initiatives to improve operational processes by applying hyperautomation, through Robotic Process Automation technology or Business Process Management Workflow Engines or Process Mining technologies\nGet Celonis certified through the 10-hour Process Mining Fundamentals course.\n\n- PEC 5.- Analysis of the application of the Metaverse in an organization.\n\nAnalyze how PARROT could take advantage of the technological trend of the Metaverse.", "<h2>UOC_Spain 05.599</h2><h2>title</h2>Functional management of IS/IT services<h2>summary</h2>This subject presents an environment that guarantees the support of IS/IT services and infrastructure in the organization, for the achievement of corporate strategies and objectives. It treats the management of IS/IT services as a set of processes and functions, provided or managed from an IT department. There are references that are useful guides in the management of these services such as ITIL, COBIT, CMMi.<h2>content</h2>Module 1. Introduction to IS/IT services.\n\n1. IS/IT services in organizations\n2. Introduction to the management of the IS/IT department\n\nModule 2. The IS/IT department\n\n1. Governance of the IS/IT department\n2. Functional area: the IS/IT department\n3. Particular organizational differences according to type of company\n\nModule 3. Construction of IS/IT services\n\n1. Management of the IS/IT service portfolio\n2. Design and transition of services\n3. Evolution and improvement of services. change management\n4. Financial management and costs of services\n\nModule 4: Provision of IS/IT services\n\n1. Customer Service Center\n2. Service requests\n3. Shipping management\n4. Availability and continuity of services\n5. Demand and capacity management\n\nModule 5: IS/IT Service Operations\n\n1. Technological environment\n2. Incident management\n3. Configuration management\n4. Security management\n\nITIL Module: An Introduction\n\n1. Context and precedents\n2. Some key ideas\n3. Changing orientation of ITIL versions\n4. The new ITIL 4 model", "<h2>UOC_Spain 05.600</h2><h2>title</h2>Planning and strategic use of IS<h2>summary</h2>The mission of this course is to introduce students of Computer Engineering and other careers to the basics to understand the strategic uses of technology in organizations and the management and strategic planning of information systems. In increasingly complex environments, information and technology management represents a key aspect for the success and proper functioning of any type of organization, whether private companies or public administrations.\n\nThis is a relatively new discipline, both in academic theory and research, and in professional practice. The concept of CIO (the chief executive officer responsible for company information and technology) appeared in the early 1980s and the Association for Information Systems (AIS) was established in 1994.\n\nInformation systems management involves the design, effective delivery, use, and impact of information technology within organizations and on society. In the words of Keen (1987), the main focus of this course is the improvement of management design and practice (\"management\"), in its broadest sense; After all, \"IT management is all about management\" (Austin & Nolan, 2010).\n\nThe above definitions describe the hybrid nature of this topic. Technology is not an artifact outside of its use in companies, organizations and human beings. Information systems are not only design, programming or architecture, but above all their effective implementation. And its management is not just about tactics and techniques (improving the organization and processes of the IT department), but about strategy (the relationship with the business strategy and obtaining competitive advantages). For this reason, when we say \"strategic management\", we want to emphasize the more proactive and transformative role that information and technologies have for the company and the need to align information and technology systems with the strategy of the company as a whole. In addition, the volume and relevance of IT spending is increasingly on the agenda of CEOs and the steering committee of companies and organizations.\n\nThis course is designed to provide students of the Bachelor's in Computer Engineering and other programs with an introductory overview of the issues currently facing business and technology and the relationship between the two and, in particular, the role of the chief executive officer responsible for systems. and technologies:\n\nWhat are the main strategic decisions in information systems and how should they be considered and adopted?\nHow should ICT be directed so that they are correctly aligned with the global business strategy?\nHow can you ensure more productive relationships between IT departments and other departments and business units?\nWhat are the main contributions of information systems to support, transform and create new products, processes and even businesses?\nHow information and knowledge management is transforming the way of doing business and the role of IT?\nHow can IT planning provide a framework and roadmap for meeting the company's mission and vision? How can it be implanted?\nHow can the IT organization be transformed with a strategic sense?\n\nAdditionally, currently there is talk of \"digital transformation\", the process by which organizations have to redesign their products and services, their work processes and their relationship with customers, suppliers, partners and staff due to the irruption of the internet, mobility, cloud and big data. The director of organization and information technology (CIO, or Chief Information Officer) assumes a new role as leader, or at least, prominent partner in this transformation and there is also a greater approach of users and business managers to technologies of the information.<h2>content</h2>The learning units are the following:\n\n\nModule 1: Strategic Decisions in Information Systems and Technologies.\n\nModule 2: Information Technologies and Business Strategy.\n\nModule 3: Information Technologies and Business Processes.\n\nModule 4: Information and Knowledge Management.\n\nModule 5: Strategic Planning of Information Systems and Technologies.\n\nModule 6: Transformation of the information systems management function.\n\n\nWe draw attention to the fact that some of these materials may be common to the subject of Strategic Management of Information Systems at the Master's level. At grade level, these competencies are worked on in a different way and with different levels of depth. The teaching guides that will accompany each module or other complementary materials will provide specific instructions on how to carry out an adequate follow-up of the subject.", "<h2>UOC_Spain 05.601</h2><h2>title</h2>Cryptography<h2>summary</h2>The main objective of the Cryptography course is to train students in the field of modern cryptography. This discipline is increasingly important in the world we live in due to the increasing value of information. On the one hand, cryptographic techniques are necessary to protect the security and privacy of users when using technology and communication networks. In particular, it is important to protect users from mass surveillance activities that can be carried out illegally not only by private companies but also by some government agencies operating outside of legal circuits. On the other hand, beyond the protection of users, companies and any entity that is related to or uses technology needs mechanisms that protect their digital assets, which can sometimes be all the assets of a company. Finally, the development of cryptography also allows the birth of new relationship paradigms between people such as the creation of new virtual currencies, cryptocurrencies, which do not depend on any centralized entity to function.\n\nThe subject wants to give a practical approach to cryptography, and that is why the subject is structured jointly based on both theoretical and practical content that is complemented by programming activities that allow us to know the real problems that arise in the implementation of cryptographic systems.<h2>content</h2>The contents of the subject are detailed below, grouping the different modules that make it up into thematic blocks:\n\nUnit 1: Basic concepts\n\nBasic terminology as well as the historical evolution of cryptography are studied. The most relevant historical cryptosystems are reviewed. The most relevant concepts of modular arithmetic are introduced to have a sufficient mathematical base to understand the cryptosystems and cryptographic protocols that are presented throughout the course. This block includes modules 1 and 2.\n\n    Module 1: Introduction to cryptography\n    Module 2: Mathematical Fundamentals\n\nUnit 2: Shared Key Cryptography\n\nThe two large families of shared-key cryptosystems are studied: block cipher and flow cipher. For each family, its main properties are characterized and the most relevant cryptosystems are studied. On the other hand, hash functions are defined, focusing on their properties and applications and analyzing in depth one of its most relevant implementations: SHA256. This block includes modules 3 and 4.\n\n    Module 3: Symmetric Key Cryptography\n    Module 4: Hash functions\n\nUnit 3: Public Key Ciphers\n\nThe characterization of the most important properties of public key cryptosystems is given, emphasizing topics such as key distribution, digital signatures, the combination between public key/symmetric key, as well as relevant aspects of the implementation of public key cryptography. . . Finally, the architecture and protocols associated with public key infrastructures (Public Key Infrastructure, PKI) are studied. This block includes modules 5 and 6.\n\n    Module 5: Public Key Cryptography\n    Module 6: Public Key Infrastructure (PKI)\n\nUnit 4: Cryptographic protocols\n\nThe cryptographic primitives described throughout the course are put into practice for the development of cryptographic protocols, such as secret sharing, null-knowledge proofs, unconscious transfer, or secure multipart computing. This block includes module 7.\n\n    Module 7: Cryptographic protocols", "<h2>UOC_Spain 05.604</h2><h2>title</h2>Electronic commerce<h2>summary</h2>The Electronic Commerce subject aims to train students in this new discipline born as a result of widely used communication networks, such as the Internet. Despite the wide range of disciplines that are often included in the words \"e-commerce\" (new economics, marketing, law, social behavior, etc.), it is important to note that since we are dealing with a computer engineering subject, its approach is eminently technological. In any case, the fact that its focus is technological does not mean that it includes different disciplines within this aspect. Thus, we can identify three large areas of knowledge that we will focus on in this course.\n\nOn the one hand we find the databases. In electronic commerce systems, the correct design and management of databases is extremely important since one of the characteristics of electronic commerce is its high degree of automation, more than in other areas. This makes databases play a very important role.\n\nAnother relevant point in electronic commerce is presented by payment systems. As is well known, one of the reluctances that electronic commerce must overcome is distrust and therefore special emphasis must be placed on security.\n\nFinally, there is a part that is often forgotten, perhaps because it affects us little, or rather, it affects us positively, and that is the problem presented by electronic commerce of digital products. The ease of copying together with the precision of these implies that piracy becomes an inherent problem with this support. This problem, which often slows down the sale and distribution of products through electronic commerce, currently generates significant research efforts. We will see different possibilities to end piracy and what problems they present.\n\nThe subject wants to be taught with a very practical approach, and that is why two compulsory practices have been included in the subject, in addition to the four PEC. In the first practice we will work with the basic web development technologies to launch an electronic commerce. On the other hand, in the second practice we will implement an electronic commerce system through a specialized content management tool (CMS) for electronic commerce: Prestashop.<h2>content</h2>The specific contents of the subject that are considered most important are detailed below for each of the modules:\n\nModule 1 - Introduction to electronic commerce (0.5 credits)\n\nBasic concepts and terminology of electronic commerce.\nThe EDI standard.\nLegal aspects of electronic commerce.\n\nModule 2 - Security in electronic commerce (1 credit)\n\nBasic concepts of cryptography and information security.\nSpecific concepts of public key cryptography.\nSecurity in electronic commerce: data, payments and products sold.\nModule 3 - Information Management (0.5 credits)\n\nStructure of a database for electronic commerce.\nData analysis of an electronic commerce system.\n\nModule 4 - Electronic payment systems (1 credit)\n\ncard payments\nvirtual wallet systems\nPayments via SMS\ndigital money\nModule 5 - Electronic copyright protection systems (1 credit)\n\nBasic concepts of copyright protection techniques for content in digital format.\nDescription of a still image marking system.\nDescription of a digital video marking system.", "<h2>UOC_Spain 05.607</h2><h2>title</h2>Databases architecture<h2>summary</h2>Database Architecture is an optional subject, proposed within the Information Technologies itinerary, belonging to the Degree in Computer Engineering. The subject delves into the knowledge acquired in previous compulsory subjects on databases, such as the Use of Databases and Database Design.\n\nThe course begins by studying the main drawbacks of the relational model and presents some alternative data models. Next, the main problems related to the implementation of database management systems (DBMS) are analyzed, both in centralized and distributed environments. Finally, fundamental concepts on the design of distributed databases are introduced.\n\nThe Degree in Computer Engineering has as a transversal competence to acquire the learning of foreign languages \u200b\u200b(specifically English). That is why some subjects have the learning material in English. This is the case of Database Architecture, given its specific characteristics (specialization subject with a model based on continuous evaluation).<h2>content</h2>The objective of this course, as explained in the first module, is to first introduce the architecture of centralized Database Management Systems (DBMS), to evolve towards distributed systems, identifying the main differences.\n\nIn the second module, the limitations of the relational model will be presented to introduce the use of objects and semi-structured data, giving special relevance to the Object-Relational and XML extensions. First, the main features of standard SQL will be covered (for example, large objects, user-defined types, inheritance, references, and multivalued attributes). Next, XML standards such as XSchema, XPath, and XQuery will be covered.\n\nDistributed databases will be introduced in the third module. First, a classification of distributed databases will be explained. Next, depending on whether the distribution is desired or imposed, it will be explained how to approach the design or the integration. The design is related to the sharding of the databases (for example, horizontal, vertical, or hybrid), while the integration can be implemented as a global view, local view, peer-to-peer, or based on containers or interfaces.\n\nModule four addresses aspects of computer security in databases, addressing the three key aspects of this concept: confidentiality, integrity and availability. Aspects such as access control, application access, vulnerabilities, inference mechanisms and auditing will be covered. Emphasis will be placed on different access control systems, as well as role-based access. Aspects related to advanced data management systems will also be worked on and aspects of access control for XML will be dealt with.\n\nWithin the fifth module, the concept of transaction explained in previous topics will be deepened. Based on this concept, a distinction will be made between ACID and BASE transactions. Multilevel reservations, the multiversion mechanism and time stamping will be explained. The first two mechanisms have been chosen for their wide use in commercial DBMSs, while the last one has been chosen for its wide use in distributed environments.\n\nThe sixth module introduces concepts related to data recovery, which in turn are related to transactions.\n\nFinally, in the seventh module, concepts related to query optimization in distributed environments will be explained. First of all, we will analyze the syntactic optimization to continue working with the physical optimization. The concepts of intra and interparallelism will also be worked on.", "<h2>UOC_Spain 05.613</h2><h2>title</h2>Data structures design<h2>summary</h2>In this subject the different strategies of data representation in a computer and the criteria to evaluate them are studied. Depending on the type of treatment that has to be done with this information (size, access criteria, etc.), it will be possible to select the strategy that offers an optimal balance between memory consumption and manipulation time.\n\nThis course is fundamental within the field of programming, since the proper use of data structures is critical in any application that handles large volumes of information or that has very strict efficiency requirements.\n\nPrevious courses in the field of programming have already introduced some basic data structures, such as lists, stacks, queues, or trees. This subject presents the concept of abstract data type (ATD) as a general model to describe a data structure and study its efficiency. Finally, the core of the course consists of learning to use each data structure properly and knowing how to select the most appropriate data structure for each situation.<h2>content</h2>The subject is structured in eight modules (module 8 of the subjects is not studied):\n\n1. Abstract data types\ncontainers\ncontract design\nDeveloping a Sample Collection\nGeneric or parametric types\nLibrary of thematic collections\nPresentation of the rest of the modules\nStudy of the concept of TAD and aspects related to its definition and implementation in classes through a hierarchy.\n\n2. Algorithmic complexity\nIntroduction to algorithmic complexity\nAsymptotic notation for algorithmic complexity\nAlgorithmic complexity of abstract data types\nDescription of the methods used to compare the cost of different programs in terms of execution times or memory consumption.\n\n3. Sequential containers\nbatteries\ntails\nchained representations\nliza\nVector representations: resizing\nSequential Containers in the Java Collections Framework\nStudy of collections of objects with sequential access (stacks, queues, lists).\n\n4. trees\nGeneral and binary trees. Definitions and related concepts\nrecursion\ngeneral trees\nbinary trees\nexcursions\nAn example file system\nPresentation of data structures used to represent hierarchical relationships and introduction of the concept of recursion.\n\n5. Priority queues\nThe priority queue concept\npriority queue operation\nPriority queue implementations\nPriority queues in JDK libraries\nHeap Sort: The Heapsort Algorithm\nUsage example: Huffman algorithm\nStudy of the design and implementation of collections where the order of access to the elements depends on their priority.\n\n6. The TAD table\nPresentation of the TAD Table\nScatter implementation of the TAD Table\nThe Joint TAD\nApplication example: a symbol table for a modular language\nTables and sets in the Java Collections Framework\nStudy of the concept of dispersion, presentation of the TAD table and the strategies for its implementation.\n7. Look for trees\nsearch trees\nImplementation of ordered collections with binary search trees\nMultipath trees and B-trees\nSearch Trees in the Java Collections Framework\nDeepening of the tree concept and its applications to represent ordered collections.\n8. Graphics\n\n(This module is not studied)\n\nThe concept of graph.\nThe abstract data type Graph\nJava interfaces for directed and undirected graphs\nGraph Implementation\nExample of use: TAD Academy\nReview of the concept of graphs and description of strategies to implement different types of graphs (directed or undirected, labeled or unlabeled,...).\n9. Collection Libraries\nDesign of new TADs using a library of collections\nCollection Library Design\nLibraries of existing collections\nAnalysis of the design of new TADs from other existing ones. Study of the considerations that affect the design of collection libraries and presentation of some existing libraries (Java Collections Framework, Java Data Structure Library, ...).", "<h2>UOC_Spain 05.614</h2><h2>title</h2>Introduction to mathematics for engineering<h2>summary</h2>Mastering the contents and mathematical methodology is essential to take any scientific degree. Therefore, it is necessary to understand its basic techniques and concepts (many times already covered in secondary and high school) before addressing the subjects of the career that you want to take.\n\nIn this course, the basic techniques and concepts of linear algebra and calculus will be provided, to guarantee adequate preparation to pass many of the subjects of the degree.<h2>content</h2>MODULE 1: ALGEBRA BLOCK\n\nTopic 1: Numbers (0.5 credits)\n\nTopic 2: Equations (0.5 credits)\n\nTopic 3: Systems of equations (0.5 credits)\n\nTopic 4: Polynomials (0.5 credits)\n\nTopic 5: Matrices (0.5 credits)\n\n \n\nMODULE 2: ANALYSIS BLOCK\n\nTopic 6: Polynomial functions (0.5 credits)\n\nTopic 7: Trigonometric functions (0.5 credits)\n\nTopic 8: Exponential and logarithmic functions (0.5 credits)\n\nTopic 9: Continuity of functions (0.5 credits)\n\nTopic 10: Derivation of functions (0.75 credits)\n\nTopic 11: Integration of functions (0.75 credits)", "<h2>UOC_Spain 05.672</h2><h2>title</h2>Business practice<h2>summary</h2>The objective of the Practices is for the student to learn to work on a day-to-day basis in a company and apply certain skills acquired in the Computer Engineering degree, both transversal and specific. The internships in companies will be organized from the UOC, with a trainee professor, and from the company with a tutor who will guide and monitor the student.\n\nThe internships will be carried out mainly online within the framework of the UOC's virtual campus. In some cases, depending on the circumstances of residence and availability of the student, they may have a face-to-face component.\n\nThe tools to develop the practices will be mainly those provided by the studies, being able to receive from the company some other specific tool to develop the work. The study load for the student will be 12 ETCS, equivalent to about 300 hours of work in the company.<h2>content</h2>The content of the internships will be marked by the type of company and the projects that are being carried out at the time the student does the internship.", "<h2>UOC_Spain 22.400</h2><h2>title</h2>Computational thinking<h2>summary</h2>This course is designed to prepare us to start in the world of programming, and to know and understand the basic concepts that will allow us to turn a specific problem into a small program that solves it.\n\nIn order to do so, we will first learn to think in such a way that we can identify what kinds of problems can be solved using a computer running through a sequence of steps designed to solve the proposed problem. That is, through what is known as computational thinking, we will know the abstract concepts that determine the appropriate reasoning to be able to solve problems through programs.\n\nNext, we'll review programming languages, which have evolved very rapidly since the popularization of personal computers, and we'll also learn about other important elements of programming context and vocabulary, such as what a computer is and what its function is. basic function. .\n\nFinally, we will see how to put it into practice by developing a small program in a guided way, introducing the different concepts that make up what is known as structured programming. To do this, we will use the Processing programming language, which was created with the aim of encouraging creativity and learning to program in a simple and attractive way.<h2>content</h2>The contents of the course are grouped into two blocks:\n\nComputational thinking, or how we should think to solve a problem using a computer. In addition, the historical background, to know the context and basic vocabulary of the field of programming and what programming languages \u200b\u200bare like.\n\nStep-by-step guided programming project to create a first program using the Processing language and letting our creativity fly.", "<h2>VirginiaTech_USA CS3704</h2><h2>title</h2>Intermediate Software Design and Engineering<h2>content</h2>Explores the principles of software design in detail, with an emphasis on software engineering aspects. Includes exposure of software lifecycle activities including design, coding, testing, debugging, and maintenance, highlighting how design affects these activities. Peer reviews, designing for software reuse, CASE tools, and writing software to specifications are also covered.", "<h2>VirginiaTech_USA CS3714</h2><h2>title</h2>Mobile Software Development<h2>content</h2>Technologies and concepts underlying software development for mobile devices (handheld computers). Mobile computing platforms, including architecture, operating system, and programming environment. Software design patterns and structuring for mobile applications. Network-centric mobile software development. Data persistence. Programming for mobile device components such as cameras, recorders, accelerometer, gyroscope and antennas. Location-aware software development.", "<h2>VirginiaTech_USA CS3724</h2><h2>title</h2>Introduction to Human-Computer Interaction<h2>content</h2>Survey of human-computer interaction concepts, theory, and practice. Basic components of human-computer interaction. Interdisciplinary underpinnings. Informed and critical evaluation of computer-based technology. User-oriented perspective, rather than system-oriented, with two thrusts: human (cognitive, social) and technological (input/output, interactions styles, devices). Design guidelines, evaluation methods, participatory design, communication between users and system developers.", "<h2>VirginiaTech_USA CS3744</h2><h2>title</h2>Introduction to GUI Programming and Graphics<h2>content</h2>Design and implementation of object-oriented graphical user interfaces (GUI) and two-dimensional computer graphics systems. Implementation methodologies including callbacks, handlers, event listeners, design patterns, layout managers, and architectural models. Mathematical foundations of computer graphics applied to fundamental algorithms for clipping, scan conversion, affine and convex linear transformations, projections, viewing, structuring, and modeling.", "<h2>VirginiaTech_USA CS3754</h2><h2>title</h2>Cloud Software Development<h2>content</h2>Fundamentals of cloud software development, including design patterns, application programming interfaces, and underlying middleware technologies. Development of distributed multi-tiered enterprise software applications that run on a server computer and are accessed using a web browser over the Internet on a network-connected computer such as desktop, laptop, or handheld computer (tablet, smartphone, or mobile device. A grade of C or better is required in prerequisite.", "<h2>VirginiaTech_USA CS3824</h2><h2>title</h2>Introduction to Computational Biology and Bioinformatics<h2>content</h2>Introduction to computational biology and bioinformatics (CBB) through hands-on learning experiences. Emphasis on problem solving in CBB. Breadth of topics covering structural bioinformatics; modeling and simulation of biological networks; computational sequence analysis; algorithms for reconstructing phylogenies; computational systems biology; and data mining algorithms.", "<h2>VirginiaTech_USA CS4104</h2><h2>title</h2>Data and Algorithm Analysis<h2>content</h2>Data structures and algorithms from an analytical perspective. Theoretical analysis of algorithm efficiency. Comparing algorithms with respect to space and run-time requirements. Analytical methods for describing theoretical and practical bounds on performance. Constraints affecting problem solvability.", "<h2>VirginiaTech_USA CS4114</h2><h2>title</h2>Introduction to Formal Languages and Automata Theory<h2>content</h2>The course presents a study of formal languages and the correspondence between language classes and the automata that recognize them. Formal definitions of grammars and acceptors, deterministic and nondeterministic systems, grammar ambiguity, finite state and push-down automata, and normal forms will be discussed.", "<h2>VirginiaTech_USA CS4124</h2><h2>title</h2>Theory of Computation<h2>content</h2>Theoretical analysis of the computational process; fundamental concepts such as abstract programs, classes of computational machines and their equivalence, recursive function theory, unsolvable problems, Church's thesis, Kleene's theorem, program equivalence, and generability, acceptability, decidability will be covered.", "<h2>VirginiaTech_USA CS4134</h2><h2>title</h2>Quantum Computation and Information Processing<h2>content</h2>Quantum states and quantum phenomena. Quantum communication concepts such as superdense coding, teleportation, and complexity. Classical and quantum circuits and gate sets for computation. Quantum algorithms and comparison to classical algorithms. Quantum computational complexity theory and complexity classes. Quantum information concepts such as density operators, measurements, and quantum channels. Error correction, the stabilizer formalism, and fault-tolerance. The adiabatic theorem and adiabatic quantum computation. Entanglement and entanglement measures.", "<h2>VirginiaTech_USA CS4144</h2><h2>title</h2>Competitive Problem Solving II<h2>content</h2>Deeper treatment of advanced algorithms, data structures, and implementation techniques, taught in a setting that combines collaborative practice with competitive exercise. Students practice to solve problems using a computer, which are judged by automated evaluation software for correctness and efficiency. Practice with advanced searching and graph algorithms, advanced dynamic programming, linear programming techniques, computational geometry, and numerical algorithms. Problems are drawn from multiple areas in computer science. Macro- and micro optimization techniques to improve efficiency are emphasized.", "<h2>VirginiaTech_USA CS4234</h2><h2>title</h2>Parallel Computation<h2>content</h2>Survey of parallel computer architectures, models of parallel computation, and interconnection networks. Parallel algorithm development and analysis. Programming paradigms and languages for parallel computation. Example applications. Performance measurement and evaluation.", "<h2>VirginiaTech_USA CS4254</h2><h2>title</h2>Computer Network Architecture & Programming<h2>content</h2>Introduction to computer network architecture, and methods for programming network services and applications (e.g. DNS, Email and MIME, http, SNMP, multimedia). Wired, wireless, and satellite network architectures. OSI protocol model, with an emphasis on upper layers. Congestion control, quality of service, routing. Internet protocol suite (e.g. IP, TCP, ARP, RARP). Server design (e.g. connectionless, concurrent). Network programming abstractions (e.g. XDR, remote procedure calls, sockets, DCOM). Case studies (e.g. TELNET).", "<h2>VirginiaTech_USA CS4264</h2><h2>title</h2>Principles of Computer Security<h2>content</h2>Survey of computer security problems and fundamental computer security design principles and models for software systems. Cryptographic models and methods. Modern cyber security techniques for robust computer operating systems, software, web applications, large-scale networks and data protection. Privacy models and techniques. Contemporary computer and network security examples.", "<h2>VirginiaTech_USA CS4284</h2><h2>title</h2>Systems & Networking Capstone<h2>content</h2>Advanced topics in computer systems & networking, e.g. distributed and parellel processing, emerging architectures, novel systems management & networking design, fault-tolerance, and robust and secure data management. Team-based approach to solving open-ended computer systems & networking problems. Designing, implementing and documenting advanced computer/networking systems.", "<h2>VirginiaTech_USA CS4504</h2><h2>title</h2>Computer Organization<h2>content</h2>Information representation and transfer; instructions and data access methods; the control unit and microprogramming; memories; input/output and interrupts; secondary storage; the von Neumann SISD organization; high level language machines; the RISC concept; special purpose processors including operating system, file, text, floating point, communication, etc. Multicomputers; multiprocessors; concurrent processing support; Pipeline machines, processor arrays, database machines; the data flow/data directed approach; computer networks. Cross-listed with ECE 4504.", "<h2>VirginiaTech_USA CS4604</h2><h2>title</h2>Introduction to Data Base Management Systems<h2>content</h2>Emphasis on introduction of the basic data base models, corresponding logical and physical data structures, comparisons of models, logical data design, and data base usage. Terminology, historical evolution, relationships, implementation, data base personnel, future trends, applications, performance considerations, data integrity. Senior standing required.", "<h2>VirginiaTech_USA CS4134</h2><h2>title</h2>Quantum Computation and Information Processing<h2>content</h2>Quantum states and quantum phenomena. Quantum communication concepts such as superdense coding, teleportation, and complexity. Classical and quantum circuits and gate sets for computation. Quantum algorithms and comparison to classical algorithms. Quantum computational complexity theory and complexity classes. Quantum information concepts such as density operators, measurements, and quantum channels. Error correction, the stabilizer formalism, and fault-tolerance. The adiabatic theorem and adiabatic quantum computation. Entanglement and entanglement measures.", "<h2>VirginiaTech_USA CS4144</h2><h2>title</h2>Competitive Problem Solving II<h2>content</h2>Deeper treatment of advanced algorithms, data structures, and implementation techniques, taught in a setting that combines collaborative practice with competitive exercise. Students practice to solve problems using a computer, which are judged by automated evaluation software for correctness and efficiency. Practice with advanced searching and graph algorithms, advanced dynamic programming, linear programming techniques, computational geometry, and numerical algorithms. Problems are drawn from multiple areas in computer science. Macro- and micro optimization techniques to improve efficiency are emphasized.", "<h2>VirginiaTech_USA CS4234</h2><h2>title</h2>Parallel Computation<h2>content</h2>Survey of parallel computer architectures, models of parallel computation, and interconnection networks. Parallel algorithm development and analysis. Programming paradigms and languages for parallel computation. Example applications. Performance measurement and evaluation.", "<h2>VirginiaTech_USA CS4254</h2><h2>title</h2>Computer Network Architecture & Programming<h2>content</h2>Introduction to computer network architecture, and methods for programming network services and applications (e.g. DNS, Email and MIME, http, SNMP, multimedia). Wired, wireless, and satellite network architectures. OSI protocol model, with an emphasis on upper layers. Congestion control, quality of service, routing. Internet protocol suite (e.g. IP, TCP, ARP, RARP). Server design (e.g. connectionless, concurrent). Network programming abstractions (e.g. XDR, remote procedure calls, sockets, DCOM). Case studies (e.g. TELNET).", "<h2>VirginiaTech_USA CS4264</h2><h2>title</h2>Principles of Computer Security<h2>content</h2>Survey of computer security problems and fundamental computer security design principles and models for software systems. Cryptographic models and methods. Modern cyber security techniques for robust computer operating systems, software, web applications, large-scale networks and data protection. Privacy models and techniques. Contemporary computer and network security examples.", "<h2>VirginiaTech_USA CS4284</h2><h2>title</h2>Systems & Networking Capstone<h2>content</h2>Advanced topics in computer systems & networking, e.g. distributed and parellel processing, emerging architectures, novel systems management & networking design, fault-tolerance, and robust and secure data management. Team-based approach to solving open-ended computer systems & networking problems. Designing, implementing and documenting advanced computer/networking systems.", "<h2>VirginiaTech_USA CS4504</h2><h2>title</h2>Computer Organization<h2>content</h2>Information representation and transfer; instructions and data access methods; the control unit and microprogramming; memories; input/output and interrupts; secondary storage; the von Neumann SISD organization; high level language machines; the RISC concept; special purpose processors including operating system, file, text, floating point, communication, etc. Multicomputers; multiprocessors; concurrent processing support; Pipeline machines, processor arrays, database machines; the data flow/data directed approach; computer networks. Cross-listed with ECE 4504.", "<h2>VirginiaTech_USA CS4604</h2><h2>title</h2>Introduction to Data Base Management Systems<h2>content</h2>Emphasis on introduction of the basic data base models, corresponding logical and physical data structures, comparisons of models, logical data design, and data base usage. Terminology, historical evolution, relationships, implementation, data base personnel, future trends, applications, performance considerations, data integrity. Senior standing required.", "<h2>VirginiaTech_USA CS4624</h2><h2>title</h2>Multimedia, Hypertext and Information Access<h2>content</h2>Introduces the architectures, concepts, data, hardware, methods, models, software, standards, structures, technologies, and issues involved with: networked multimedia (e.g., image, audio, video) information, access and systems; hypertext and hypermedia; electronic publishing; virtual reality. Coverage includes text processing, search, retrieval, browsing, time-based performance, synchronization, quality of service, video conferencing and authoring.", "<h2>VirginiaTech_USA CS4644</h2><h2>title</h2>Creative Computing Studio<h2>content</h2>Capstone computer science course at the intersection of arts and technology. Intensive immersion in different approaches to digital arts such as game design, interactive art, digital music, and immersive virtual reality. Students work in teams to conduct an end-to-end integrative design project.", "<h2>VirginiaTech_USA CS4704</h2><h2>title</h2>Software Engineering Capstone<h2>content</h2>Senior project course integrating software engineering knowledge and skills acquired in previous courses. Team-based approach to problem formulation, requirements engineering, architecture, design, implementation, integration, documentation and delivery of a software system that solves a real-world problem.", "<h2>VirginiaTech_USA CS4784</h2><h2>title</h2>Human-Computer Interaction Capstone<h2>content</h2>Advanced, project-based course in Human-Computer Interaction. Team-based, end-to-end, integrative interface design project drawn from area of expertise in the department, e.g., virtual reality, augmented reality, embodied cognition, visualization, semiotic engineering, game design, personal information management, mobile computing, design tools, educational technology, and digital democracy. Pre-requisite: Senior Standing required. A grade of C or better is required in CS pre-requisite 3724 and 3744", "<h2>VirginiaTech_USA CS4804</h2><h2>title</h2>Introduction to Artificial Intelligence<h2>content</h2>Overview of the areas of problem solving, game playing, and computer vision. Search trees and/or graphs, game trees, block world vision, syntactic pattern recognition, object matching, natural language, and robotics.", "<h2>VirginiaTech_USA CS4824</h2><h2>title</h2>Machine Learning<h2>content</h2>Algorithms and principles involved in machine learning; focus on perception problems arising in computer vision, natural language processing and robotics; fundamentals of representing uncertainty, learning from data, supervised learning, ensemble methods, unsupervised learning, structured models, learning theory and reinforcement learning; design and analysis of machine perception systems; design and implementation of a technical project applied to real-world datasets (images, text, robotics). A grade of C- or better in prerequisites.", "<h2>VirginiaTech_USA CS4884</h2><h2>title</h2>Computational Biology & Bioinformatics Capstone<h2>content</h2>Advanced topics in computational biology and bioinformatics (CBB). Team-based approach to solving open-ended problems in CBB. Projects drawn from areas of expertise in the department, e.g., algorithms for CBB, computational models for biological systems, analysis of structure-function relationships in biomolecules, genomic data analysis and data mining, computational genomics, systems biology. Design, implementation, documentation and presentation of solutions."]